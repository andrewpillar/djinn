

pidfile "/var/run/djinn/worker.pid"

log info "/var/log/djinn/worker.log"

# Set to 0 to use the number of CPU cores available.
parallelism 0

# The driver we want to use when executing builds with the worker. To use all
# drivers then set to "*". For the "qemu" driver the arch must match the host
# arch. For example, if running on amd64 and you want to use the qemu driver
# then you must specify "qemu-x86_64".
driver "*"

# The duration after which builds should be killed. Valid time units are "ns",
# "us", "ms", "s", "m", "h".
timeout "30m"

crypto {
	# The block key is required for encrypting data. This must be either, 16, 24,
	# or 32 characters in length. This should be the same as what's in
	# server.cfg.
	block "1a2b3c4d5e6f7g8h"

	# Salt is used for generating hard to guess secrets, and for generating the
	# final key that is used for encrypting data. This should match what is in
	# server.cfg.
	salt "1a2b3c4d5e6f7g8h"
}

# Connection information for the PostgreSQL database.
database {
	addr "localhost:5432"
	name "djinn"

	username "djinn-server"
	password "secret"

	# Optional configuration block if you want to connect via SSL to the
	# PostgreSQL database. Setting the below would be the equivalent of
	# putting sslmode=verify-full in the connection string to PostgresSQL.
#	ssl {
#		ca   "/var/lib/ssl/ca.crt"
#		cert "/var/lib/ssl/pgclient.crt"
#		key  "/var/lib/ssl/pgclient.key"
#	}
}

# Connection information for the Redis database.
redis {
	addr "localhost:6379"

	# Optional password parameter if Redis is password protected.
#	password "secret"
}

# Connection information for the SMTP server to use for delivering mail.
smtp {
	addr "smtp.example.com:587"

	# If connecting via TLS, then the path to the file that contains a set of
	# root certificate authorities.
	ca "/etc/ssl/cert.pem"

	# The email address to be used in the From field of mails that are sent.
	# Typically this is set to noreply@<host>.
	admin "noreply@djinn-ci.com"

	# The username and password to use if authentication is required when
	# connecting to the SMTP server.
	username "postmaster@example.com"
	password "secret"
}

# Where the artifact files should be stored upon collection. Limit here denotes
# the maximum number of bytes a single artifact can be. The worker will only
# collect the first n number of bytes for a single artifact, if an artifact
# is larger than the specified limit.
store artifacts {
	type  "file"
	path  "/var/lib/djinn/artifacts"
	limit 52428800
}

# Where the worker should look for the driver images being used, either base
# images or custom.
store images {
	type "file"
	path "/var/lib/djinn/images"
}

# Where the artifact files should be taken from during placement.
store objects {
	type "file"
	path "/var/lib/djinn/objects"
}

# Provider blocks configure the external 3rd party providers we can connect to.
# These blocks follow the format of,
#
#     provider <name>
#
# where <name> is the name of the provider we want to connect to. <name> would
# be one of the following,
#
# * github
# * gitlab
#
# detailed below are the shared properties for the provider block,
#
# * endpoint      - the custom endpoint to use for the provider. If none is given
#                   then the provider's default endpoint is used
# * secret        - the secret to use to authenticate webhooks that we receive
#                   from the provider
# * client_id     - the client_id given by the provider for handling OAuth
# * client_secret - the client_secret given by the provider for handling OAuth
provider github {
	secret        "123456"
	client_id     "..."
	client_secret "..."
}

provider gitlab {
	secret        "123456"
	client_id     "..."
	client_secret "..."
}
