// Code generated by qtc from "dashboard.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line template/dashboard.qtpl:2
package template

//line template/dashboard.qtpl:2
import (
	"net/http"
	"regexp"

	"djinn-ci.com/alert"
	"djinn-ci.com/auth"
	"djinn-ci.com/env"

	"github.com/gorilla/sessions"
)

//line template/dashboard.qtpl:15
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line template/dashboard.qtpl:15
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line template/dashboard.qtpl:15
type Partial interface {
//line template/dashboard.qtpl:15
	Title() string
//line template/dashboard.qtpl:15
	StreamTitle(qw422016 *qt422016.Writer)
//line template/dashboard.qtpl:15
	WriteTitle(qq422016 qtio422016.Writer)
//line template/dashboard.qtpl:15
	Header() string
//line template/dashboard.qtpl:15
	StreamHeader(qw422016 *qt422016.Writer)
//line template/dashboard.qtpl:15
	WriteHeader(qq422016 qtio422016.Writer)
//line template/dashboard.qtpl:15
	Actions() string
//line template/dashboard.qtpl:15
	StreamActions(qw422016 *qt422016.Writer)
//line template/dashboard.qtpl:15
	WriteActions(qq422016 qtio422016.Writer)
//line template/dashboard.qtpl:15
	Navigation() string
//line template/dashboard.qtpl:15
	StreamNavigation(qw422016 *qt422016.Writer)
//line template/dashboard.qtpl:15
	WriteNavigation(qq422016 qtio422016.Writer)
//line template/dashboard.qtpl:15
	Body() string
//line template/dashboard.qtpl:15
	StreamBody(qw422016 *qt422016.Writer)
//line template/dashboard.qtpl:15
	WriteBody(qq422016 qtio422016.Writer)
//line template/dashboard.qtpl:15
	Footer() string
//line template/dashboard.qtpl:15
	StreamFooter(qw422016 *qt422016.Writer)
//line template/dashboard.qtpl:15
	WriteFooter(qq422016 qtio422016.Writer)
//line template/dashboard.qtpl:15
}

//line template/dashboard.qtpl:31
type Dashboard struct {
	Partial
	*Page

	Alert alert.Alert
}

func NewDashboard(u *auth.User, sess *sessions.Session, r *http.Request) *Dashboard {
	return &Dashboard{
		Page:  NewPage(u, r),
		Alert: alert.First(sess),
	}
}

var verifiedAlert = alert.Alert{
	Level:   alert.Danger,
	Message: `Your account is not verified, go to your <a href="/settings">settings</a> to verify it.`,
	HTML:    true,
}

func verified(u *auth.User) bool {
	if v, ok := u.RawData["verified"]; ok {
		b, _ := v.(bool)
		return b
	}
	return false
}

type NavLink struct {
	Title     string
	Href      string
	Icon      string
	Pattern   *regexp.Regexp
	Condition func() bool
}

var sidebarLinks = []NavLink{
	{
		Title:   "Builds",
		Href:    "/builds",
		Icon:    "static/svg/build.svg",
		Pattern: regexp.MustCompile("(^\\/builds\\/?|^\\/builds\\/create$|^\\/b/[_\\-a-zA-Z0-9.]+\\/[0-9]+\\/?[a-z]*)"),
	},
	{
		Title:   "Namespaces",
		Href:    "/namespaces",
		Icon:    "static/svg/folder.svg",
		Pattern: regexp.MustCompile("(\\/namespaces\\/?|\\/n\\/[_\\-a-zA-Z0-9.]+\\/[\\-a-zA-Z0-9\\/]*\\/?)"),
	},
	{
		Title:   "Cron",
		Href:    "/cron",
		Icon:    "static/svg/timer.svg",
		Pattern: regexp.MustCompile("\\/cron\\/?"),
	},
	{
		Title:   "Invites",
		Href:    "/invites",
		Icon:    "static/svg/mail.svg",
		Pattern: regexp.MustCompile("^\\/invites\\/?$"),
	},
	{
		Title:   "Repositories",
		Href:    "/repos",
		Icon:    "static/svg/repo.svg",
		Pattern: regexp.MustCompile("^\\/repos\\/?$"),
	},
	{
		Title:   "Images",
		Href:    "/images",
		Icon:    "static/svg/image.svg",
		Pattern: regexp.MustCompile("^\\/images\\/?"),
	},
	{
		Title:   "Objects",
		Href:    "/objects",
		Icon:    "static/svg/upload.svg",
		Pattern: regexp.MustCompile("^\\/objects\\/?"),
	},
	{
		Title:   "Variables",
		Href:    "/variables",
		Icon:    "static/svg/code.svg",
		Pattern: regexp.MustCompile("^\\/variables\\/?"),
	},
	{
		Title:   "SSH Keys",
		Href:    "/keys",
		Icon:    "static/svg/code.svg",
		Pattern: regexp.MustCompile("^\\/keys\\/?"),
	},
}

var settingsLink = NavLink{
	Title:   "Settings",
	Href:    "/settings",
	Icon:    "static/svg/settings.svg",
	Pattern: regexp.MustCompile("^\\/settings\\/?"),
}

//line template/dashboard.qtpl:133
func (l *NavLink) StreamRender(qw422016 *qt422016.Writer, url string) {
//line template/dashboard.qtpl:133
	qw422016.N().S(` `)
//line template/dashboard.qtpl:134
	if l.Condition == nil || l.Condition() {
//line template/dashboard.qtpl:134
		qw422016.N().S(` `)
//line template/dashboard.qtpl:135
		if l.Pattern.Match([]byte(url)) {
//line template/dashboard.qtpl:135
			qw422016.N().S(` <a class="active" href="`)
//line template/dashboard.qtpl:136
			qw422016.E().S(l.Href)
//line template/dashboard.qtpl:136
			qw422016.N().S(`" title="`)
//line template/dashboard.qtpl:136
			qw422016.E().S(l.Title)
//line template/dashboard.qtpl:136
			qw422016.N().S(`"> `)
//line template/dashboard.qtpl:137
			qw422016.N().V(icon(l.Icon))
//line template/dashboard.qtpl:137
			qw422016.N().S(`<span>`)
//line template/dashboard.qtpl:137
			qw422016.E().S(l.Title)
//line template/dashboard.qtpl:137
			qw422016.N().S(`</span> </a> `)
//line template/dashboard.qtpl:139
		} else {
//line template/dashboard.qtpl:139
			qw422016.N().S(` <a href="`)
//line template/dashboard.qtpl:140
			qw422016.E().S(l.Href)
//line template/dashboard.qtpl:140
			qw422016.N().S(`" title="`)
//line template/dashboard.qtpl:140
			qw422016.E().S(l.Title)
//line template/dashboard.qtpl:140
			qw422016.N().S(`"> `)
//line template/dashboard.qtpl:141
			qw422016.N().V(icon(l.Icon))
//line template/dashboard.qtpl:141
			qw422016.N().S(`<span>`)
//line template/dashboard.qtpl:141
			qw422016.E().S(l.Title)
//line template/dashboard.qtpl:141
			qw422016.N().S(`</span> </a> `)
//line template/dashboard.qtpl:143
		}
//line template/dashboard.qtpl:143
		qw422016.N().S(` `)
//line template/dashboard.qtpl:144
	}
//line template/dashboard.qtpl:144
	qw422016.N().S(` `)
//line template/dashboard.qtpl:145
}

//line template/dashboard.qtpl:145
func (l *NavLink) WriteRender(qq422016 qtio422016.Writer, url string) {
//line template/dashboard.qtpl:145
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/dashboard.qtpl:145
	l.StreamRender(qw422016, url)
//line template/dashboard.qtpl:145
	qt422016.ReleaseWriter(qw422016)
//line template/dashboard.qtpl:145
}

//line template/dashboard.qtpl:145
func (l *NavLink) Render(url string) string {
//line template/dashboard.qtpl:145
	qb422016 := qt422016.AcquireByteBuffer()
//line template/dashboard.qtpl:145
	l.WriteRender(qb422016, url)
//line template/dashboard.qtpl:145
	qs422016 := string(qb422016.B)
//line template/dashboard.qtpl:145
	qt422016.ReleaseByteBuffer(qb422016)
//line template/dashboard.qtpl:145
	return qs422016
//line template/dashboard.qtpl:145
}

//line template/dashboard.qtpl:147
func StreamAlert(qw422016 *qt422016.Writer, a alert.Alert, url string) {
//line template/dashboard.qtpl:147
	qw422016.N().S(` `)
//line template/dashboard.qtpl:148
	if a.Message != "" {
//line template/dashboard.qtpl:148
		qw422016.N().S(` <div class="alert alert-`)
//line template/dashboard.qtpl:149
		qw422016.E().S(a.Level.String())
//line template/dashboard.qtpl:149
		qw422016.N().S(`"> <div class="alert-message"> `)
//line template/dashboard.qtpl:151
		if a.HTML {
//line template/dashboard.qtpl:151
			qw422016.N().S(` `)
//line template/dashboard.qtpl:152
			qw422016.N().S(a.Message)
//line template/dashboard.qtpl:152
			qw422016.N().S(` `)
//line template/dashboard.qtpl:153
		} else {
//line template/dashboard.qtpl:153
			qw422016.N().S(` `)
//line template/dashboard.qtpl:154
			qw422016.E().S(a.Message)
//line template/dashboard.qtpl:154
			qw422016.N().S(` `)
//line template/dashboard.qtpl:155
		}
//line template/dashboard.qtpl:155
		qw422016.N().S(` </div> `)
//line template/dashboard.qtpl:157
		if a.Close {
//line template/dashboard.qtpl:157
			qw422016.N().S(` <a href="`)
//line template/dashboard.qtpl:158
			qw422016.E().S(url)
//line template/dashboard.qtpl:158
			qw422016.N().S(`" class="alert-close">`)
//line template/dashboard.qtpl:158
			qw422016.N().S(`<!-- Generated by IcoMoon.io -->
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
<path d="M18.984 6.422l-5.578 5.578 5.578 5.578-1.406 1.406-5.578-5.578-5.578 5.578-1.406-1.406 5.578-5.578-5.578-5.578 1.406-1.406 5.578 5.578 5.578-5.578z"></path>
</svg>
`)
//line template/dashboard.qtpl:158
			qw422016.N().S(`</a> `)
//line template/dashboard.qtpl:159
		}
//line template/dashboard.qtpl:159
		qw422016.N().S(` </div> `)
//line template/dashboard.qtpl:161
	}
//line template/dashboard.qtpl:161
	qw422016.N().S(` `)
//line template/dashboard.qtpl:162
}

//line template/dashboard.qtpl:162
func WriteAlert(qq422016 qtio422016.Writer, a alert.Alert, url string) {
//line template/dashboard.qtpl:162
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/dashboard.qtpl:162
	StreamAlert(qw422016, a, url)
//line template/dashboard.qtpl:162
	qt422016.ReleaseWriter(qw422016)
//line template/dashboard.qtpl:162
}

//line template/dashboard.qtpl:162
func Alert(a alert.Alert, url string) string {
//line template/dashboard.qtpl:162
	qb422016 := qt422016.AcquireByteBuffer()
//line template/dashboard.qtpl:162
	WriteAlert(qb422016, a, url)
//line template/dashboard.qtpl:162
	qs422016 := string(qb422016.B)
//line template/dashboard.qtpl:162
	qt422016.ReleaseByteBuffer(qb422016)
//line template/dashboard.qtpl:162
	return qs422016
//line template/dashboard.qtpl:162
}

//line template/dashboard.qtpl:164
func (p *Dashboard) streamsidebar(qw422016 *qt422016.Writer, links []NavLink) {
//line template/dashboard.qtpl:164
	qw422016.N().S(` <div class="sidebar"> <div class="sidebar-header"> `)
//line template/dashboard.qtpl:167
	StreamLogo(qw422016)
//line template/dashboard.qtpl:167
	qw422016.N().S(` <h2>Djinn CI</h2> </div> `)
//line template/dashboard.qtpl:170
	if p.User.ID == 0 {
//line template/dashboard.qtpl:170
		qw422016.N().S(` <div class="sidebar-auth"> <a class="login" href="/login">Login</a> <a class="register" href="/register">Register</a> </div> `)
//line template/dashboard.qtpl:175
	} else {
//line template/dashboard.qtpl:175
		qw422016.N().S(` <ul class="sidebar-nav"> `)
//line template/dashboard.qtpl:177
		if env.DJINN_API_DOCS != "" || env.DJINN_USER_DOCS != "" {
//line template/dashboard.qtpl:177
			qw422016.N().S(` <li class="sidebar-nav-header">DOCS</li> `)
//line template/dashboard.qtpl:179
		}
//line template/dashboard.qtpl:179
		qw422016.N().S(` `)
//line template/dashboard.qtpl:180
		if env.DJINN_API_DOCS != "" {
//line template/dashboard.qtpl:180
			qw422016.N().S(` <li> <a title="API Documentation" href="`)
//line template/dashboard.qtpl:182
			qw422016.E().S(env.DJINN_API_DOCS)
//line template/dashboard.qtpl:182
			qw422016.N().S(`" target="_blank"> `)
//line template/dashboard.qtpl:183
			qw422016.N().S(`<!-- Generated by IcoMoon.io -->
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
<path d="M14.578 16.594l4.641-4.594-4.641-4.594 1.406-1.406 6 6-6 6zM9.422 16.594l-1.406 1.406-6-6 6-6 1.406 1.406-4.641 4.594z"></path>
</svg>
`)
//line template/dashboard.qtpl:183
			qw422016.N().S(`<span>API</span> </a> </li> `)
//line template/dashboard.qtpl:186
		}
//line template/dashboard.qtpl:186
		qw422016.N().S(` `)
//line template/dashboard.qtpl:187
		if env.DJINN_USER_DOCS != "" {
//line template/dashboard.qtpl:187
			qw422016.N().S(` <li> <a title="User Documentation" href="`)
//line template/dashboard.qtpl:189
			qw422016.E().S(env.DJINN_USER_DOCS)
//line template/dashboard.qtpl:189
			qw422016.N().S(`" target="_blank"> `)
//line template/dashboard.qtpl:190
			qw422016.N().S(`<!-- Generated by IcoMoon.io -->
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
<path d="M6.984 12.984v-1.969h14.016v1.969h-14.016zM6.984 18.984v-1.969h14.016v1.969h-14.016zM6.984 5.016h14.016v1.969h-14.016v-1.969zM2.016 11.016v-1.031h3v0.938l-1.828 2.063h1.828v1.031h-3v-0.938l1.781-2.063h-1.781zM3 8.016v-3h-0.984v-1.031h1.969v4.031h-0.984zM2.016 17.016v-1.031h3v4.031h-3v-1.031h1.969v-0.469h-0.984v-1.031h0.984v-0.469h-1.969z"></path>
</svg>
`)
//line template/dashboard.qtpl:190
			qw422016.N().S(`<span>User</span> </a> </li> `)
//line template/dashboard.qtpl:193
		}
//line template/dashboard.qtpl:193
		qw422016.N().S(` <li class="sidebar-nav-header">MANAGE</li> `)
//line template/dashboard.qtpl:195
		for _, link := range links {
//line template/dashboard.qtpl:195
			qw422016.N().S(` <li>`)
//line template/dashboard.qtpl:196
			link.StreamRender(qw422016, p.URL.Path)
//line template/dashboard.qtpl:196
			qw422016.N().S(`</li> `)
//line template/dashboard.qtpl:197
		}
//line template/dashboard.qtpl:197
		qw422016.N().S(` <li class="sidebar-nav-header">ACCOUNT</li> <li>`)
//line template/dashboard.qtpl:199
		settingsLink.StreamRender(qw422016, p.URL.Path)
//line template/dashboard.qtpl:199
		qw422016.N().S(`</li> <li> <form method="POST" action="/logout"> `)
//line template/dashboard.qtpl:202
		qw422016.N().V(p.CSRF)
//line template/dashboard.qtpl:202
		qw422016.N().S(` <button title="Logout" type="submit"> `)
//line template/dashboard.qtpl:204
		qw422016.N().S(`<!-- Generated by IcoMoon.io -->
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
<path d="M18.984 3c1.078 0 2.016 0.938 2.016 2.016v13.969c0 1.078-0.938 2.016-2.016 2.016h-13.969c-1.125 0-2.016-0.938-2.016-2.016v-3.984h2.016v3.984h13.969v-13.969h-13.969v3.984h-2.016v-3.984c0-1.078 0.891-2.016 2.016-2.016h13.969zM10.078 15.609l2.578-2.625h-9.656v-1.969h9.656l-2.578-2.625 1.406-1.406 5.016 5.016-5.016 5.016z"></path>
</svg>
`)
//line template/dashboard.qtpl:204
		qw422016.N().S(`<span>Logout</span> </button> </form> </li> </ul> `)
//line template/dashboard.qtpl:209
	}
//line template/dashboard.qtpl:209
	qw422016.N().S(` </div> `)
//line template/dashboard.qtpl:211
}

//line template/dashboard.qtpl:211
func (p *Dashboard) writesidebar(qq422016 qtio422016.Writer, links []NavLink) {
//line template/dashboard.qtpl:211
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/dashboard.qtpl:211
	p.streamsidebar(qw422016, links)
//line template/dashboard.qtpl:211
	qt422016.ReleaseWriter(qw422016)
//line template/dashboard.qtpl:211
}

//line template/dashboard.qtpl:211
func (p *Dashboard) sidebar(links []NavLink) string {
//line template/dashboard.qtpl:211
	qb422016 := qt422016.AcquireByteBuffer()
//line template/dashboard.qtpl:211
	p.writesidebar(qb422016, links)
//line template/dashboard.qtpl:211
	qs422016 := string(qb422016.B)
//line template/dashboard.qtpl:211
	qt422016.ReleaseByteBuffer(qb422016)
//line template/dashboard.qtpl:211
	return qs422016
//line template/dashboard.qtpl:211
}

//line template/dashboard.qtpl:213
func (p *Dashboard) StreamBody(qw422016 *qt422016.Writer) {
//line template/dashboard.qtpl:213
	qw422016.N().S(` <div class="dashboard"> <div class="dashboard-content"> `)
//line template/dashboard.qtpl:216
	if !verified(p.User) {
//line template/dashboard.qtpl:216
		qw422016.N().S(` `)
//line template/dashboard.qtpl:217
		StreamAlert(qw422016, verifiedAlert, "")
//line template/dashboard.qtpl:217
		qw422016.N().S(` `)
//line template/dashboard.qtpl:218
	}
//line template/dashboard.qtpl:218
	qw422016.N().S(` `)
//line template/dashboard.qtpl:219
	StreamAlert(qw422016, p.Alert, p.URL.Path)
//line template/dashboard.qtpl:219
	qw422016.N().S(` <div class="dashboard-wrap"> <div class="dashboard-header"> <div class="overflow"> <h1>`)
//line template/dashboard.qtpl:223
	p.Partial.StreamHeader(qw422016)
//line template/dashboard.qtpl:223
	qw422016.N().S(`</h1> <ul class="dashboard-actions">`)
//line template/dashboard.qtpl:224
	p.Partial.StreamActions(qw422016)
//line template/dashboard.qtpl:224
	qw422016.N().S(`</ul> </div> <ul class="dashboard-nav">`)
//line template/dashboard.qtpl:226
	p.Partial.StreamNavigation(qw422016)
//line template/dashboard.qtpl:226
	qw422016.N().S(`</ul> </div> <div class="dashboard-body">`)
//line template/dashboard.qtpl:228
	p.Partial.StreamBody(qw422016)
//line template/dashboard.qtpl:228
	qw422016.N().S(`</div> </div> </div> `)
//line template/dashboard.qtpl:231
	p.streamsidebar(qw422016, sidebarLinks)
//line template/dashboard.qtpl:231
	qw422016.N().S(` </div> `)
//line template/dashboard.qtpl:233
}

//line template/dashboard.qtpl:233
func (p *Dashboard) WriteBody(qq422016 qtio422016.Writer) {
//line template/dashboard.qtpl:233
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/dashboard.qtpl:233
	p.StreamBody(qw422016)
//line template/dashboard.qtpl:233
	qt422016.ReleaseWriter(qw422016)
//line template/dashboard.qtpl:233
}

//line template/dashboard.qtpl:233
func (p *Dashboard) Body() string {
//line template/dashboard.qtpl:233
	qb422016 := qt422016.AcquireByteBuffer()
//line template/dashboard.qtpl:233
	p.WriteBody(qb422016)
//line template/dashboard.qtpl:233
	qs422016 := string(qb422016.B)
//line template/dashboard.qtpl:233
	qt422016.ReleaseByteBuffer(qb422016)
//line template/dashboard.qtpl:233
	return qs422016
//line template/dashboard.qtpl:233
}
