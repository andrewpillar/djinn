// Code generated by qtc from "form.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line template/form/form.qtpl:2
package form

//line template/form/form.qtpl:2
import (
	"html/template"
	"net/http"

	"djinn-ci.com/database"

	"github.com/andrewpillar/webutil/v2"

	"github.com/gorilla/csrf"
	"github.com/gorilla/sessions"
)

//line template/form/form.qtpl:15
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line template/form/form.qtpl:15
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line template/form/form.qtpl:16
type FieldType uint

const (
	Text FieldType = iota + 1
	Textarea
	Password
	Checkbox
	Radio
	File
)

type Field struct {
	ID       string
	Name     string
	Desc     string
	Value    string
	Optional bool
	Disabled bool
	Checked  bool
	Type     FieldType
}

type Form struct {
	model database.Model

	CSRF   template.HTML
	Errors webutil.ValidationErrors
	Fields map[string]string
}

func New(sess *sessions.Session, r *http.Request) *Form {
	return &Form{
		CSRF:   csrf.TemplateField(r),
		Errors: webutil.FormErrors(sess),
		Fields: webutil.FormFields(sess),
	}
}

func NewWithModel(sess *sessions.Session, r *http.Request, m database.Model) *Form {
	f := New(sess, r)
	f.model = m
	return f
}

func (f *Form) fieldValue(fld Field) any {
	if f.model != nil {
		params := f.model.Params()

		if p, ok := params[fld.ID]; ok {
			if s, ok := p.Value.(interface{ String() string }); ok {
				return s.String()
			}
			return p.Value
		}
	}

	if v, ok := f.Fields[fld.ID]; ok {
		return v
	}
	return fld.Value
}

//line template/form/form.qtpl:80
func StreamMethod(qw422016 *qt422016.Writer, method string) {
//line template/form/form.qtpl:80
	qw422016.N().S(` <input type="hidden" name="_method" value="`)
//line template/form/form.qtpl:81
	qw422016.E().S(method)
//line template/form/form.qtpl:81
	qw422016.N().S(`"/> `)
//line template/form/form.qtpl:82
}

//line template/form/form.qtpl:82
func WriteMethod(qq422016 qtio422016.Writer, method string) {
//line template/form/form.qtpl:82
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/form/form.qtpl:82
	StreamMethod(qw422016, method)
//line template/form/form.qtpl:82
	qt422016.ReleaseWriter(qw422016)
//line template/form/form.qtpl:82
}

//line template/form/form.qtpl:82
func Method(method string) string {
//line template/form/form.qtpl:82
	qb422016 := qt422016.AcquireByteBuffer()
//line template/form/form.qtpl:82
	WriteMethod(qb422016, method)
//line template/form/form.qtpl:82
	qs422016 := string(qb422016.B)
//line template/form/form.qtpl:82
	qt422016.ReleaseByteBuffer(qb422016)
//line template/form/form.qtpl:82
	return qs422016
//line template/form/form.qtpl:82
}

//line template/form/form.qtpl:84
func (f *Form) streamrenderField(qw422016 *qt422016.Writer, fld Field) {
//line template/form/form.qtpl:84
	qw422016.N().S(` `)
//line template/form/form.qtpl:85
	if fld.Type != Checkbox && fld.Type != Radio {
//line template/form/form.qtpl:85
		qw422016.N().S(` <label class="label" for="`)
//line template/form/form.qtpl:86
		qw422016.E().S(fld.ID)
//line template/form/form.qtpl:86
		qw422016.N().S(`"> `)
//line template/form/form.qtpl:87
		qw422016.E().S(fld.Name)
//line template/form/form.qtpl:87
		if fld.Optional {
//line template/form/form.qtpl:87
			qw422016.N().S(` <small>(optional)</small>`)
//line template/form/form.qtpl:87
		}
//line template/form/form.qtpl:87
		qw422016.N().S(` </label> `)
//line template/form/form.qtpl:89
	}
//line template/form/form.qtpl:89
	qw422016.N().S(` `)
//line template/form/form.qtpl:90
	switch fld.Type {
//line template/form/form.qtpl:91
	case Text:
//line template/form/form.qtpl:91
		qw422016.N().S(` `)
//line template/form/form.qtpl:92
		if fld.Desc != "" {
//line template/form/form.qtpl:92
			qw422016.N().S(` <div class="form-desc">`)
//line template/form/form.qtpl:93
			qw422016.N().S(fld.Desc)
//line template/form/form.qtpl:93
			qw422016.N().S(`</div> `)
//line template/form/form.qtpl:94
		}
//line template/form/form.qtpl:94
		qw422016.N().S(` <input autocomplete="off" class="form-text" id="`)
//line template/form/form.qtpl:95
		qw422016.E().S(fld.ID)
//line template/form/form.qtpl:95
		qw422016.N().S(`" name="`)
//line template/form/form.qtpl:95
		qw422016.E().S(fld.ID)
//line template/form/form.qtpl:95
		qw422016.N().S(`" type="text" value="`)
//line template/form/form.qtpl:95
		qw422016.E().V(f.fieldValue(fld))
//line template/form/form.qtpl:95
		qw422016.N().S(`"/> `)
//line template/form/form.qtpl:96
	case Password:
//line template/form/form.qtpl:96
		qw422016.N().S(` <input autocomplete="off" class="form-text" id="`)
//line template/form/form.qtpl:97
		qw422016.E().S(fld.ID)
//line template/form/form.qtpl:97
		qw422016.N().S(`" name="`)
//line template/form/form.qtpl:97
		qw422016.E().S(fld.ID)
//line template/form/form.qtpl:97
		qw422016.N().S(`" type="password"/> `)
//line template/form/form.qtpl:98
	case Textarea:
//line template/form/form.qtpl:98
		qw422016.N().S(` <textarea class="form-text form-code" id="`)
//line template/form/form.qtpl:99
		qw422016.E().S(fld.ID)
//line template/form/form.qtpl:99
		qw422016.N().S(`" name="`)
//line template/form/form.qtpl:99
		qw422016.E().S(fld.ID)
//line template/form/form.qtpl:99
		qw422016.N().S(`">`)
//line template/form/form.qtpl:99
		qw422016.E().V(f.fieldValue(fld))
//line template/form/form.qtpl:99
		qw422016.N().S(`</textarea> `)
//line template/form/form.qtpl:100
	case Checkbox:
//line template/form/form.qtpl:100
		qw422016.N().S(` <label class="form-option"> `)
//line template/form/form.qtpl:102
		if v := f.fieldValue(fld); v == "checked" || fld.Checked {
//line template/form/form.qtpl:102
			qw422016.N().S(` <input checked="true" class="form-selector" name="`)
//line template/form/form.qtpl:103
			qw422016.E().S(fld.ID)
//line template/form/form.qtpl:103
			qw422016.N().S(`" type="checkbox"/> `)
//line template/form/form.qtpl:104
		} else {
//line template/form/form.qtpl:104
			qw422016.N().S(` <input class="form-selector" name="`)
//line template/form/form.qtpl:105
			qw422016.E().S(fld.ID)
//line template/form/form.qtpl:105
			qw422016.N().S(`" type="checkbox"/> `)
//line template/form/form.qtpl:106
		}
//line template/form/form.qtpl:106
		qw422016.N().S(` <div class="form-option-info"> <strong>`)
//line template/form/form.qtpl:108
		qw422016.E().S(fld.Name)
//line template/form/form.qtpl:108
		qw422016.N().S(`</strong> `)
//line template/form/form.qtpl:109
		if fld.Desc != "" {
//line template/form/form.qtpl:109
			qw422016.N().S(`<div class="form-desc">`)
//line template/form/form.qtpl:109
			qw422016.N().S(fld.Desc)
//line template/form/form.qtpl:109
			qw422016.N().S(`</div>`)
//line template/form/form.qtpl:109
		}
//line template/form/form.qtpl:109
		qw422016.N().S(` </div> </label> `)
//line template/form/form.qtpl:112
	case Radio:
//line template/form/form.qtpl:112
		qw422016.N().S(` <label class="form-option"> `)
//line template/form/form.qtpl:114
		if v, ok := f.Fields[fld.ID]; ok && v == fld.Value || fld.Checked {
//line template/form/form.qtpl:114
			qw422016.N().S(` <input checked="true" class="form-selector" name="`)
//line template/form/form.qtpl:115
			qw422016.E().S(fld.ID)
//line template/form/form.qtpl:115
			qw422016.N().S(`" type="radio" value="`)
//line template/form/form.qtpl:115
			qw422016.E().S(fld.Value)
//line template/form/form.qtpl:115
			qw422016.N().S(`"/> `)
//line template/form/form.qtpl:116
		} else {
//line template/form/form.qtpl:116
			qw422016.N().S(` <input class="form-selector" type="radio" name="`)
//line template/form/form.qtpl:117
			qw422016.E().S(fld.ID)
//line template/form/form.qtpl:117
			qw422016.N().S(`" value="`)
//line template/form/form.qtpl:117
			qw422016.E().S(fld.Value)
//line template/form/form.qtpl:117
			qw422016.N().S(`"/> `)
//line template/form/form.qtpl:118
		}
//line template/form/form.qtpl:118
		qw422016.N().S(` <div class="form-option-info"> <strong>`)
//line template/form/form.qtpl:120
		qw422016.E().S(fld.Name)
//line template/form/form.qtpl:120
		qw422016.N().S(`</strong> `)
//line template/form/form.qtpl:121
		if fld.Desc != "" {
//line template/form/form.qtpl:121
			qw422016.N().S(`<div class="form-desc">`)
//line template/form/form.qtpl:121
			qw422016.N().S(fld.Desc)
//line template/form/form.qtpl:121
			qw422016.N().S(`</div>`)
//line template/form/form.qtpl:121
		}
//line template/form/form.qtpl:121
		qw422016.N().S(` </div> </label> `)
//line template/form/form.qtpl:124
	case File:
//line template/form/form.qtpl:124
		qw422016.N().S(` <input id="`)
//line template/form/form.qtpl:125
		qw422016.E().S(fld.ID)
//line template/form/form.qtpl:125
		qw422016.N().S(`" name="`)
//line template/form/form.qtpl:125
		qw422016.E().S(fld.ID)
//line template/form/form.qtpl:125
		qw422016.N().S(`" type="file"/> `)
//line template/form/form.qtpl:126
	}
//line template/form/form.qtpl:126
	qw422016.N().S(` `)
//line template/form/form.qtpl:127
}

//line template/form/form.qtpl:127
func (f *Form) writerenderField(qq422016 qtio422016.Writer, fld Field) {
//line template/form/form.qtpl:127
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/form/form.qtpl:127
	f.streamrenderField(qw422016, fld)
//line template/form/form.qtpl:127
	qt422016.ReleaseWriter(qw422016)
//line template/form/form.qtpl:127
}

//line template/form/form.qtpl:127
func (f *Form) renderField(fld Field) string {
//line template/form/form.qtpl:127
	qb422016 := qt422016.AcquireByteBuffer()
//line template/form/form.qtpl:127
	f.writerenderField(qb422016, fld)
//line template/form/form.qtpl:127
	qs422016 := string(qb422016.B)
//line template/form/form.qtpl:127
	qt422016.ReleaseByteBuffer(qb422016)
//line template/form/form.qtpl:127
	return qs422016
//line template/form/form.qtpl:127
}

//line template/form/form.qtpl:129
func (f *Form) StreamField(qw422016 *qt422016.Writer, fld Field) {
//line template/form/form.qtpl:129
	qw422016.N().S(` <div class="form-field"> `)
//line template/form/form.qtpl:131
	f.streamrenderField(qw422016, fld)
//line template/form/form.qtpl:131
	qw422016.N().S(` `)
//line template/form/form.qtpl:132
	f.StreamError(qw422016, fld.ID)
//line template/form/form.qtpl:132
	qw422016.N().S(` </div> `)
//line template/form/form.qtpl:134
}

//line template/form/form.qtpl:134
func (f *Form) WriteField(qq422016 qtio422016.Writer, fld Field) {
//line template/form/form.qtpl:134
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/form/form.qtpl:134
	f.StreamField(qw422016, fld)
//line template/form/form.qtpl:134
	qt422016.ReleaseWriter(qw422016)
//line template/form/form.qtpl:134
}

//line template/form/form.qtpl:134
func (f *Form) Field(fld Field) string {
//line template/form/form.qtpl:134
	qb422016 := qt422016.AcquireByteBuffer()
//line template/form/form.qtpl:134
	f.WriteField(qb422016, fld)
//line template/form/form.qtpl:134
	qs422016 := string(qb422016.B)
//line template/form/form.qtpl:134
	qt422016.ReleaseByteBuffer(qb422016)
//line template/form/form.qtpl:134
	return qs422016
//line template/form/form.qtpl:134
}

//line template/form/form.qtpl:136
func (f *Form) StreamFieldGroup(qw422016 *qt422016.Writer, id string, typ FieldType, fields ...Field) {
//line template/form/form.qtpl:136
	qw422016.N().S(` <div class="form-field"> `)
//line template/form/form.qtpl:138
	for _, fld := range fields {
//line template/form/form.qtpl:138
		qw422016.N().S(` `)
//line template/form/form.qtpl:139
		f.streamrenderField(qw422016, Field{
			ID:       id,
			Name:     fld.Name,
			Desc:     fld.Desc,
			Value:    fld.Value,
			Optional: fld.Optional,
			Disabled: fld.Disabled,
			Checked:  fld.Checked,
			Type:     typ,
		})
//line template/form/form.qtpl:148
		qw422016.N().S(` `)
//line template/form/form.qtpl:149
	}
//line template/form/form.qtpl:149
	qw422016.N().S(` `)
//line template/form/form.qtpl:150
	f.StreamError(qw422016, id)
//line template/form/form.qtpl:150
	qw422016.N().S(` </div> `)
//line template/form/form.qtpl:152
}

//line template/form/form.qtpl:152
func (f *Form) WriteFieldGroup(qq422016 qtio422016.Writer, id string, typ FieldType, fields ...Field) {
//line template/form/form.qtpl:152
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/form/form.qtpl:152
	f.StreamFieldGroup(qw422016, id, typ, fields...)
//line template/form/form.qtpl:152
	qt422016.ReleaseWriter(qw422016)
//line template/form/form.qtpl:152
}

//line template/form/form.qtpl:152
func (f *Form) FieldGroup(id string, typ FieldType, fields ...Field) string {
//line template/form/form.qtpl:152
	qb422016 := qt422016.AcquireByteBuffer()
//line template/form/form.qtpl:152
	f.WriteFieldGroup(qb422016, id, typ, fields...)
//line template/form/form.qtpl:152
	qs422016 := string(qb422016.B)
//line template/form/form.qtpl:152
	qt422016.ReleaseByteBuffer(qb422016)
//line template/form/form.qtpl:152
	return qs422016
//line template/form/form.qtpl:152
}

//line template/form/form.qtpl:154
func (f *Form) StreamError(qw422016 *qt422016.Writer, field string) {
//line template/form/form.qtpl:154
	qw422016.N().S(` <div class="form-error"> `)
//line template/form/form.qtpl:156
	if err := f.Errors.First(field); err != "" {
//line template/form/form.qtpl:156
		qw422016.N().S(` `)
//line template/form/form.qtpl:157
		qw422016.E().S(err)
//line template/form/form.qtpl:157
		qw422016.N().S(` `)
//line template/form/form.qtpl:158
	}
//line template/form/form.qtpl:158
	qw422016.N().S(` </div> `)
//line template/form/form.qtpl:160
}

//line template/form/form.qtpl:160
func (f *Form) WriteError(qq422016 qtio422016.Writer, field string) {
//line template/form/form.qtpl:160
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/form/form.qtpl:160
	f.StreamError(qw422016, field)
//line template/form/form.qtpl:160
	qt422016.ReleaseWriter(qw422016)
//line template/form/form.qtpl:160
}

//line template/form/form.qtpl:160
func (f *Form) Error(field string) string {
//line template/form/form.qtpl:160
	qb422016 := qt422016.AcquireByteBuffer()
//line template/form/form.qtpl:160
	f.WriteError(qb422016, field)
//line template/form/form.qtpl:160
	qs422016 := string(qb422016.B)
//line template/form/form.qtpl:160
	qt422016.ReleaseByteBuffer(qb422016)
//line template/form/form.qtpl:160
	return qs422016
//line template/form/form.qtpl:160
}
