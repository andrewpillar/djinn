# The following configuration is an example of how you may want to deploy a
# proxy for your Djinn CI server deployment. The following sets up 4 server
# blocks, two for the UI an API served over TLS, and two for handling the
# http to https redirects for each.

user www-data www-data;

worker_processes auto;

pid /run/nginx.pid;

include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
}

http {
	server_tokens off;

	sendfile on;

	tcp_nopush on;
	tcp_nodelay on;

	default_type application/octet-stream;

	gzip on;

	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_types text/plain text/css application/json;

	server {
		listen 80;
		listen [::]:80;

		server_name djinn-ci.acme.com;

		location / {
			return 301 https://$server_name$request_uri;
		}
	}

	# Server block for the domain that will serve the UI for the Djinn CI
	# server.
	server {
		listen 443;
		listen [::]:443;

		ssl_protocols TLSv1.2;
		ssl_prefer_server_ciphers on;

		ssl_certificate /var/lib/ssl/server.crt;
		ssl_certificate_key /var/lib/ssl/server.key;

		server_name djinn-ci.acme.com;

		access_log /var/log/nginx/djinn-ui-access.log;
		error_log /var/log/nginx/djinn-ui-errors.log;

		# When serving over a proxy the underlying timeouts in the server.conf
		# file for Djinn CI can be removed in favor of the following. These
		# are overidden on a per location basis depending on the request being
		# made.
		proxy_read_timeout 15;
		proxy_send_timeout 15;

		location / {
			limit_except GET POST PATCH DELETE HEAD {
				deny all;
			}

			proxy_set_header Accept-Encoding "";
			proxy_set_header X-Forwarded-Host $host;
			proxy_set_header X-Forwarded-Proto $scheme;

			proxy_pass http://localhost:8080;
		}

		# Object and images may be large in size, so we remove the maximum body
		# size of a request. Objects have a maximum possible size anyway, so any
		# request that exceeds that configured size will be caught.
		location /objects {
			client_max_body_size 0;

			proxy_request_buffering off;

			proxy_pass http://localhost:8080;
		}

		# Similar to the /objects location we remove the limit on the request
		# size. We also increase the proxy read/send timeouts to 10 minutes.
		# This should give adequate time to upload a build image.
		location /images {
			client_max_body_size 0;

			proxy_request_buffering off;

			proxy_read_timeout 600;
			proxy_send_timeout 600;

			proxy_pass http://localhost:8080;
		}

		# We increase the timeouts too for downloading a build image.
		location ~ ^/images/[0-9]+/download/(.+) {
			proxy_buffering off;

			proxy_read_timeout 600;
			proxy_send_timeout 600;

			proxy_pass http://localhost:8080;
		}

		# Only needed if serving both API and UI from same server.
#		location ~ ^/api/images/[0-9]+ {
#			proxy_buffering off;
#
#			proxy_read_timeout 600;
#			proxy_send_timeout 600;
#		}
	}

	server {
		listen 80;
		listen [::]:80;

		server_name api.djinn-ci.acme.com;

		location / {
			return 301 https://$server_name$request_uri;
		}
	}

	# Server block for the separate domain which will server the Djinn CI REST
	# API if running two separate instances of the Djinn CI server.
	server {
		listen 443;
		listen [::]:443;

		ssl_protocols TLSv1.2;
		ssl_prefer_server_ciphers on;

		ssl_certificate /var/lib/ssl/server.crt;
		ssl_certificate_key /var/lib/ssl/server.key;

		server_name api.djinn-ci.acme.com;

		access_log /var/log/nginx/djinn-api-access.log;
		error_log /var/log/nginx/djinn-api-errors.log;

		proxy_read_timeout 15;
		proxy_send_timeout 15;

		location / {
			limit_except GET POST PATCH DELETE HEAD {
				deny all;
			}

			proxy_set_header Accept-Encoding "";
			proxy_set_header X-Forwarded-Host $host;
			proxy_set_header X-Forwarded-Proto $scheme;

			proxy_pass http://localhost:8081;
		}

		location /objects {
			client_max_body_size 0;

			proxy_request_buffering off;

			proxy_pass http://localhost:8081;
		}

		location /images {
			client_max_body_size 0;

			proxy_request_buffering off;

			proxy_read_timeout 600;
			proxy_send_timeout 600;

			proxy_pass http://localhost:8081;
		}

		location ~ ^/images/[0-9]+ {
			proxy_buffering off;

			proxy_read_timeout 600;
			proxy_send_timeout 600;

			proxy_pass http://localhost:8081;
		}
	}
}
