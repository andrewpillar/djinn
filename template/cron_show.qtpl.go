// Code generated by qtc from "cron_show.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line template/cron_show.qtpl:2
package template

//line template/cron_show.qtpl:2
import (
	"strings"

	"djinn-ci.com/cron"
	"djinn-ci.com/template/form"
)

//line template/cron_show.qtpl:10
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line template/cron_show.qtpl:10
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line template/cron_show.qtpl:11
type CronShow struct {
	*Page

	Cron   *cron.Cron
	Builds *BuildIndex
}

//line template/cron_show.qtpl:20
func (p *CronShow) StreamTitle(qw422016 *qt422016.Writer) {
//line template/cron_show.qtpl:20
	qw422016.N().S(`Cron Jobs - `)
//line template/cron_show.qtpl:20
	qw422016.E().S(p.Cron.Name)
//line template/cron_show.qtpl:20
}

//line template/cron_show.qtpl:20
func (p *CronShow) WriteTitle(qq422016 qtio422016.Writer) {
//line template/cron_show.qtpl:20
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/cron_show.qtpl:20
	p.StreamTitle(qw422016)
//line template/cron_show.qtpl:20
	qt422016.ReleaseWriter(qw422016)
//line template/cron_show.qtpl:20
}

//line template/cron_show.qtpl:20
func (p *CronShow) Title() string {
//line template/cron_show.qtpl:20
	qb422016 := qt422016.AcquireByteBuffer()
//line template/cron_show.qtpl:20
	p.WriteTitle(qb422016)
//line template/cron_show.qtpl:20
	qs422016 := string(qb422016.B)
//line template/cron_show.qtpl:20
	qt422016.ReleaseByteBuffer(qb422016)
//line template/cron_show.qtpl:20
	return qs422016
//line template/cron_show.qtpl:20
}

//line template/cron_show.qtpl:22
func (p *CronShow) StreamHeader(qw422016 *qt422016.Writer) {
//line template/cron_show.qtpl:22
	qw422016.N().S(` <a href="/cron" class="back">`)
//line template/cron_show.qtpl:23
	qw422016.N().S(`<!-- Generated by IcoMoon.io -->
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
<path d="M20.016 11.016v1.969h-12.188l5.578 5.625-1.406 1.406-8.016-8.016 8.016-8.016 1.406 1.406-5.578 5.625h12.188z"></path>
</svg>
`)
//line template/cron_show.qtpl:23
	qw422016.N().S(`</a> `)
//line template/cron_show.qtpl:24
	if p.Cron.Namespace != nil {
//line template/cron_show.qtpl:24
		qw422016.N().S(` <a href="`)
//line template/cron_show.qtpl:25
		qw422016.E().S(p.Cron.Namespace.Endpoint())
//line template/cron_show.qtpl:25
		qw422016.N().S(`">`)
//line template/cron_show.qtpl:25
		qw422016.E().S(p.Cron.Namespace.Name)
//line template/cron_show.qtpl:25
		qw422016.N().S(`</a> / `)
//line template/cron_show.qtpl:26
	}
//line template/cron_show.qtpl:26
	qw422016.N().S(` `)
//line template/cron_show.qtpl:27
	qw422016.E().S(p.Cron.Name)
//line template/cron_show.qtpl:27
	qw422016.N().S(` `)
//line template/cron_show.qtpl:28
}

//line template/cron_show.qtpl:28
func (p *CronShow) WriteHeader(qq422016 qtio422016.Writer) {
//line template/cron_show.qtpl:28
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/cron_show.qtpl:28
	p.StreamHeader(qw422016)
//line template/cron_show.qtpl:28
	qt422016.ReleaseWriter(qw422016)
//line template/cron_show.qtpl:28
}

//line template/cron_show.qtpl:28
func (p *CronShow) Header() string {
//line template/cron_show.qtpl:28
	qb422016 := qt422016.AcquireByteBuffer()
//line template/cron_show.qtpl:28
	p.WriteHeader(qb422016)
//line template/cron_show.qtpl:28
	qs422016 := string(qb422016.B)
//line template/cron_show.qtpl:28
	qt422016.ReleaseByteBuffer(qb422016)
//line template/cron_show.qtpl:28
	return qs422016
//line template/cron_show.qtpl:28
}

//line template/cron_show.qtpl:30
func (p *CronShow) StreamActions(qw422016 *qt422016.Writer) {
//line template/cron_show.qtpl:30
	qw422016.N().S(` <li><a href="`)
//line template/cron_show.qtpl:31
	qw422016.E().S(p.Cron.Endpoint("edit"))
//line template/cron_show.qtpl:31
	qw422016.N().S(`" class="btn btn-primary">Edit</a></li> `)
//line template/cron_show.qtpl:32
	if p.User.ID == p.Cron.UserID {
//line template/cron_show.qtpl:32
		qw422016.N().S(` <li> <form method="POST" action="`)
//line template/cron_show.qtpl:34
		qw422016.E().S(p.Cron.Endpoint())
//line template/cron_show.qtpl:34
		qw422016.N().S(`"> `)
//line template/cron_show.qtpl:35
		form.StreamMethod(qw422016, "DELETE")
//line template/cron_show.qtpl:35
		qw422016.N().S(` `)
//line template/cron_show.qtpl:36
		qw422016.N().V(p.CSRF)
//line template/cron_show.qtpl:36
		qw422016.N().S(` <button type="submit" class="btn btn-danger">Delete</button> </form> </li> `)
//line template/cron_show.qtpl:40
	}
//line template/cron_show.qtpl:40
	qw422016.N().S(` `)
//line template/cron_show.qtpl:41
}

//line template/cron_show.qtpl:41
func (p *CronShow) WriteActions(qq422016 qtio422016.Writer) {
//line template/cron_show.qtpl:41
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/cron_show.qtpl:41
	p.StreamActions(qw422016)
//line template/cron_show.qtpl:41
	qt422016.ReleaseWriter(qw422016)
//line template/cron_show.qtpl:41
}

//line template/cron_show.qtpl:41
func (p *CronShow) Actions() string {
//line template/cron_show.qtpl:41
	qb422016 := qt422016.AcquireByteBuffer()
//line template/cron_show.qtpl:41
	p.WriteActions(qb422016)
//line template/cron_show.qtpl:41
	qs422016 := string(qb422016.B)
//line template/cron_show.qtpl:41
	qt422016.ReleaseByteBuffer(qb422016)
//line template/cron_show.qtpl:41
	return qs422016
//line template/cron_show.qtpl:41
}

//line template/cron_show.qtpl:43
func (p *CronShow) StreamNavigation(qw422016 *qt422016.Writer) {
//line template/cron_show.qtpl:43
}

//line template/cron_show.qtpl:43
func (p *CronShow) WriteNavigation(qq422016 qtio422016.Writer) {
//line template/cron_show.qtpl:43
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/cron_show.qtpl:43
	p.StreamNavigation(qw422016)
//line template/cron_show.qtpl:43
	qt422016.ReleaseWriter(qw422016)
//line template/cron_show.qtpl:43
}

//line template/cron_show.qtpl:43
func (p *CronShow) Navigation() string {
//line template/cron_show.qtpl:43
	qb422016 := qt422016.AcquireByteBuffer()
//line template/cron_show.qtpl:43
	p.WriteNavigation(qb422016)
//line template/cron_show.qtpl:43
	qs422016 := string(qb422016.B)
//line template/cron_show.qtpl:43
	qt422016.ReleaseByteBuffer(qb422016)
//line template/cron_show.qtpl:43
	return qs422016
//line template/cron_show.qtpl:43
}

//line template/cron_show.qtpl:44
func (p *CronShow) StreamFooter(qw422016 *qt422016.Writer) {
//line template/cron_show.qtpl:44
}

//line template/cron_show.qtpl:44
func (p *CronShow) WriteFooter(qq422016 qtio422016.Writer) {
//line template/cron_show.qtpl:44
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/cron_show.qtpl:44
	p.StreamFooter(qw422016)
//line template/cron_show.qtpl:44
	qt422016.ReleaseWriter(qw422016)
//line template/cron_show.qtpl:44
}

//line template/cron_show.qtpl:44
func (p *CronShow) Footer() string {
//line template/cron_show.qtpl:44
	qb422016 := qt422016.AcquireByteBuffer()
//line template/cron_show.qtpl:44
	p.WriteFooter(qb422016)
//line template/cron_show.qtpl:44
	qs422016 := string(qb422016.B)
//line template/cron_show.qtpl:44
	qt422016.ReleaseByteBuffer(qb422016)
//line template/cron_show.qtpl:44
	return qs422016
//line template/cron_show.qtpl:44
}

//line template/cron_show.qtpl:46
func (p *CronShow) StreamBody(qw422016 *qt422016.Writer) {
//line template/cron_show.qtpl:46
	qw422016.N().S(` <div class="panel"> <table class="table"> <tr> <td>Name</td> <td class="align-right">`)
//line template/cron_show.qtpl:51
	qw422016.E().S(p.Cron.Name)
//line template/cron_show.qtpl:51
	qw422016.N().S(`</td> </tr> <tr> <td>Schedule</td> <td class="align-right">`)
//line template/cron_show.qtpl:55
	qw422016.E().S(strings.ToUpper(p.Cron.Schedule.String()))
//line template/cron_show.qtpl:55
	qw422016.N().S(`</td> </tr> <tr> <td>Previous Run</td> `)
//line template/cron_show.qtpl:59
	if p.Cron.PrevRun.Valid {
//line template/cron_show.qtpl:59
		qw422016.N().S(` <td class="align-right">`)
//line template/cron_show.qtpl:60
		qw422016.E().S(p.Cron.PrevRun.Elem.Format("Mon, 2 Jan 2006 15:04"))
//line template/cron_show.qtpl:60
		qw422016.N().S(`</td> `)
//line template/cron_show.qtpl:61
	} else {
//line template/cron_show.qtpl:61
		qw422016.N().S(` <td class="align-right muted">--</td> `)
//line template/cron_show.qtpl:63
	}
//line template/cron_show.qtpl:63
	qw422016.N().S(` </tr> <tr> <td>Next Run</td> <td class="align-right">`)
//line template/cron_show.qtpl:67
	qw422016.E().S(p.Cron.NextRun.Format("Mon, 2 Jan 2006 15:04"))
//line template/cron_show.qtpl:67
	qw422016.N().S(`</td> </tr> </table> </div> `)
//line template/cron_show.qtpl:71
	p.Builds.StreamBody(qw422016)
//line template/cron_show.qtpl:71
	qw422016.N().S(` `)
//line template/cron_show.qtpl:72
}

//line template/cron_show.qtpl:72
func (p *CronShow) WriteBody(qq422016 qtio422016.Writer) {
//line template/cron_show.qtpl:72
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/cron_show.qtpl:72
	p.StreamBody(qw422016)
//line template/cron_show.qtpl:72
	qt422016.ReleaseWriter(qw422016)
//line template/cron_show.qtpl:72
}

//line template/cron_show.qtpl:72
func (p *CronShow) Body() string {
//line template/cron_show.qtpl:72
	qb422016 := qt422016.AcquireByteBuffer()
//line template/cron_show.qtpl:72
	p.WriteBody(qb422016)
//line template/cron_show.qtpl:72
	qs422016 := string(qb422016.B)
//line template/cron_show.qtpl:72
	qt422016.ReleaseByteBuffer(qb422016)
//line template/cron_show.qtpl:72
	return qs422016
//line template/cron_show.qtpl:72
}
