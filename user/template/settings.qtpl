{%
import (
	"github.com/andrewpillar/djinn/provider"
	"github.com/andrewpillar/djinn/template"
)
%}

{% code
type Settings struct {
	template.BasePage
	template.Form

	Providers []*provider.Provider
	Section   template.Section
}
%}

{% collapsespace %}
{% func (p *Settings) Title() %}
	Settings{% if p.Section != nil %} - {%= p.Section.Title() %}{% endif %} - Djinn
{% endfunc %}

{% func (p *Settings) renderProvider(prv *provider.Provider) %}
	{% if !prv.Connected %}
		<a href="{%s prv.AuthURL %}" class="provider-btn provider-{%s prv.Name %}">
			{% switch prv.Name %}
			{% case "github" %}
				{% cat "../../static/svg/github.svg" %}
			{% case "gitlab" %}
				{% cat "../../static/svg/gitlab.svg" %}
			{% endswitch %}
			<span>Connect</span>
		</a>
	{% else %}
		<form method="POST" action="/oauth/{%s prv.Name %}" class="inline-block">
			{%s= p.CSRF %}
			<input type="hidden" name="_method" value="DELETE"/>
			<button type="submit" class="provider-btn provider-{%s prv.Name %}">
				{% switch prv.Name %}
				{% case "github" %}
					{% cat "../../static/svg/github.svg" %}
				{% case "gitlab" %}
					{% cat "../../static/svg/gitlab.svg" %}
				{% endswitch %}
				<span>Disconnect</span>
			</button>
		</form>
	{% endif %}
{% endfunc %}

{% func (p *Settings) Body() %}
	{% if p.Section != nil %}
		{%= p.Section.Body() %}
	{% else %}
		<div class="panel">
			<div class="panel-body slim">
				{% if !p.User.Verified %}
					<form method="POST" action="/settings/verify">
						<h2>Verify account</h2>
						{%s= p.CSRF %}
						<div class="form-field">
							<button type="submit" class="btn btn-primary">Send verification email</button>
						</div>
					</form>
					<div class="separator"></div>
				{% endif %}
				{% if len(p.Providers) > 0 %}
					<h2>Connected accounts</h2>
					<div class="providers">
						{% for _, prv := range p.Providers %}
							{%= p.renderProvider(prv) %}
						{% endfor %}
					</div>
				{% endif %}
				<div class="separator"></div>
				<form method="POST" action="/settings/email">
					<h2>Change email</h2>
					{%s= p.CSRF %}
					<input type="hidden" name="_method" value="PATCH"/>
					<div class="form-field">
						<label class="label" for="email">Email</label>
						<input class="form-text" type="text" id="email" name="email" value="{%s p.Fields["email"] %}" autocomplete="off"/>
						{%= p.Error("email") %}
					</div>
					<div class="form-field">
						<label class="label" for="verify_password">Verify Password</label>
						<input class="form-text" type="password" id="verify_password" name="verify_password" autocomplete="off"/>
						{%= p.Error("email_verify_password") %}
					</div>
					<div class="form-field">
						<button type="submit" class="btn btn-primary">Update</button>
					</div>
				</form>
				<div class="separator"></div>
				<form method="POST" action="/settings/password">
					<h2>Change password</h2>
					<input type="hidden" name="_method" value="PATCH"/>
					{%s= p.CSRF %}
					<div class="form-field">
						<label class="label" for="old_password">Old Password</label>
						<input class="form-text" type="password" id="old_password" name="old_password" autocomplete="off"/>
						{%= p.Error("old_password") %}
					</div>
					<div class="form-field">
						<label class="label" for="new_password">New Password</label>
						<input class="form-text" type="password" id="new_password" name="new_password" autocomplete="off"/>
						{%= p.Error("new_password") %}
					</div>
					<div class="form-field">
						<label class="label" for="verify_password">Verify Password</label>
						<input class="form-text" type="password" id="verify_password" name="verify_password" autocomplete="off"/>
						{%= p.Error("pass_verify_password") %}
					</div>
					<div class="form-field">
						<button type="submit" class="btn btn-primary">Update</button>
					</div>
				</form>
			</div>
		</div>
	{% endif %}
{% endfunc %}

{% func (p *Settings) Header() %}
	{% if p.Section != nil %}
		{%= p.Section.Header() %}
	{% else %}
		Settings
	{% endif %}
{% endfunc %}

{% func (p *Settings) Actions() %}
	{% if p.Section != nil %}
		{%= p.Section.Actions() %}
	{% endif %}
{% endfunc %}

{% func (p *Settings) Navigation() %}
	<li>
		{% if p.URL.Path == "/settings" %}
			<a href="/settings" class="active">{% cat "../../static/svg/user.svg" %}<span>Account</span></a>
		{% else %}
			<a href="/settings">{% cat "../../static/svg/user.svg" %}<span>Account</span></a>
		{% endif %}
	</li>
	<li>
		{% if p.URL.Path == "/settings/apps" %}
			<a href="/settings/apps" class="active">{% cat "../../static/svg/folder.svg" %}<span>OAuth Apps</span></a>
		{% else %}
			<a href="/settings/apps">{% cat "../../static/svg/folder.svg" %}<span>OAuth Apps</span></a>
		{% endif %}
	</li>
	<li>
		{% if p.URL.Path == "/settings/tokens" || p.URL.Path == "/settings/tokens/create" %}
			<a href="/settings/tokens" class="active">{% cat "../../static/svg/code.svg" %}<span>Access Tokens</span></a>
		{% else %}
			<a href="/settings/tokens">{% cat "../../static/svg/code.svg" %}<span>Access Tokens</span></a>
		{% endif %}
	</li>
{% endfunc %}
{% endcollapsespace %}
