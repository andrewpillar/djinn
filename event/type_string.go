// Code generated by "stringer -type Type -linecomment"; DO NOT EDIT.

package event

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BuildSubmitted-1]
	_ = x[BuildStarted-2]
	_ = x[BuildFinished-4]
	_ = x[BuildTagged-8]
	_ = x[InviteSent-16]
	_ = x[InviteAccepted-32]
	_ = x[InviteRejected-64]
	_ = x[Namespaces-128]
	_ = x[Cron-256]
	_ = x[Images-512]
	_ = x[Objects-1024]
	_ = x[Variables-2048]
	_ = x[SSHKeys-4096]
	_ = x[BuildPinned-8192]
	_ = x[BuildUnpinned-16384]
}

const _Type_name = "build.submittedbuild.startedbuild.finishedbuild.taggedinvite.sentinvite.acceptedinvite.rejectednamespacescronimagesobjectsvariablesssh_keysbuild.pinnedbuild.unpinned"

var _Type_map = map[Type]string{
	1:     _Type_name[0:15],
	2:     _Type_name[15:28],
	4:     _Type_name[28:42],
	8:     _Type_name[42:54],
	16:    _Type_name[54:65],
	32:    _Type_name[65:80],
	64:    _Type_name[80:95],
	128:   _Type_name[95:105],
	256:   _Type_name[105:109],
	512:   _Type_name[109:115],
	1024:  _Type_name[115:122],
	2048:  _Type_name[122:131],
	4096:  _Type_name[131:139],
	8192:  _Type_name[139:151],
	16384: _Type_name[151:165],
}

func (i Type) String() string {
	if str, ok := _Type_map[i]; ok {
		return str
	}
	return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
}
