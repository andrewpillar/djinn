// Code generated by "stringer -type Type -linecomment"; DO NOT EDIT.

package event

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BuildSubmitted-1]
	_ = x[BuildStarted-2]
	_ = x[BuildFinished-4]
	_ = x[BuildTagged-8]
	_ = x[InviteSent-16]
	_ = x[InviteAccepted-32]
	_ = x[Cron-64]
	_ = x[Images-128]
	_ = x[Objects-256]
	_ = x[Variables-512]
	_ = x[SSHKeys-1024]
}

const (
	_Type_name_0 = "build.submittedbuild.started"
	_Type_name_1 = "build.finished"
	_Type_name_2 = "build.tagged"
	_Type_name_3 = "invite.sent"
	_Type_name_4 = "invite.accepted"
	_Type_name_5 = "cron"
	_Type_name_6 = "images"
	_Type_name_7 = "objects"
	_Type_name_8 = "variables"
	_Type_name_9 = "ssh_keys"
)

var (
	_Type_index_0 = [...]uint8{0, 15, 28}
)

func (i Type) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _Type_name_0[_Type_index_0[i]:_Type_index_0[i+1]]
	case i == 4:
		return _Type_name_1
	case i == 8:
		return _Type_name_2
	case i == 16:
		return _Type_name_3
	case i == 32:
		return _Type_name_4
	case i == 64:
		return _Type_name_5
	case i == 128:
		return _Type_name_6
	case i == 256:
		return _Type_name_7
	case i == 512:
		return _Type_name_8
	case i == 1024:
		return _Type_name_9
	default:
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
