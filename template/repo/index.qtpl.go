// This file is automatically generated by qtc from "index.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line template/repo/index.qtpl:2
package repo

//line template/repo/index.qtpl:2
import (
	"github.com/andrewpillar/thrall/model"
	"github.com/andrewpillar/thrall/template"
)

//line template/repo/index.qtpl:8
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line template/repo/index.qtpl:8
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line template/repo/index.qtpl:9
type IndexPage struct {
	template.BasePage

	CSRF     string
	Repos    []model.Repo
	Provider string
}

//line template/repo/index.qtpl:19
func (p *IndexPage) StreamTitle(qw422016 *qt422016.Writer) {
	//line template/repo/index.qtpl:19
	qw422016.N().S(` Repositories - Thrall `)
//line template/repo/index.qtpl:21
}

//line template/repo/index.qtpl:21
func (p *IndexPage) WriteTitle(qq422016 qtio422016.Writer) {
	//line template/repo/index.qtpl:21
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line template/repo/index.qtpl:21
	p.StreamTitle(qw422016)
	//line template/repo/index.qtpl:21
	qt422016.ReleaseWriter(qw422016)
//line template/repo/index.qtpl:21
}

//line template/repo/index.qtpl:21
func (p *IndexPage) Title() string {
	//line template/repo/index.qtpl:21
	qb422016 := qt422016.AcquireByteBuffer()
	//line template/repo/index.qtpl:21
	p.WriteTitle(qb422016)
	//line template/repo/index.qtpl:21
	qs422016 := string(qb422016.B)
	//line template/repo/index.qtpl:21
	qt422016.ReleaseByteBuffer(qb422016)
	//line template/repo/index.qtpl:21
	return qs422016
//line template/repo/index.qtpl:21
}

//line template/repo/index.qtpl:23
func (p *IndexPage) StreamBody(qw422016 *qt422016.Writer) {
	//line template/repo/index.qtpl:23
	qw422016.N().S(` <div class="panel"> `)
	//line template/repo/index.qtpl:25
	if len(p.User.Providers) == 0 {
		//line template/repo/index.qtpl:25
		qw422016.N().S(` <div class="panel-message muted">Connect to GitHub or GitLab to trigger builds on pushes, and pull reqests made on a repository. Get started by connecting from your account <a href="/settings">settings</a>. `)
		//line template/repo/index.qtpl:27
	} else {
		//line template/repo/index.qtpl:27
		qw422016.N().S(` <div class="panel-header"> <ul class="panel-nav"> <li> <a href="`)
		//line template/repo/index.qtpl:31
		qw422016.E().S(p.URL.Path)
		//line template/repo/index.qtpl:31
		qw422016.N().S(`" `)
		//line template/repo/index.qtpl:31
		if p.Provider == "" {
			//line template/repo/index.qtpl:31
			qw422016.N().S(`class="active"`)
			//line template/repo/index.qtpl:31
		}
		//line template/repo/index.qtpl:31
		qw422016.N().S(`> All </a> </li> `)
		//line template/repo/index.qtpl:35
		for _, prv := range p.User.Providers {
			//line template/repo/index.qtpl:35
			qw422016.N().S(` <li> <a href="`)
			//line template/repo/index.qtpl:37
			qw422016.E().S(p.URL.Path)
			//line template/repo/index.qtpl:37
			qw422016.N().S(`?provider=`)
			//line template/repo/index.qtpl:37
			qw422016.E().S(prv.Name)
			//line template/repo/index.qtpl:37
			qw422016.N().S(`" `)
			//line template/repo/index.qtpl:37
			if p.Provider == prv.Name {
				//line template/repo/index.qtpl:37
				qw422016.N().S(`class="active"`)
				//line template/repo/index.qtpl:37
			}
			//line template/repo/index.qtpl:37
			qw422016.N().S(`>`)
			//line template/repo/index.qtpl:37
			qw422016.E().S(prv.Name)
			//line template/repo/index.qtpl:37
			qw422016.N().S(`</a> </li> `)
			//line template/repo/index.qtpl:39
		}
		//line template/repo/index.qtpl:39
		qw422016.N().S(` </ul> <table class="table"> <thead> <th></th> <th></th> </thead> <tbody> `)
		//line template/repo/index.qtpl:47
		for _, r := range p.Repos {
			//line template/repo/index.qtpl:47
			qw422016.N().S(` <tr> <td><a href="`)
			//line template/repo/index.qtpl:49
			qw422016.E().S(r.Href)
			//line template/repo/index.qtpl:49
			qw422016.N().S(`" target="_blank">`)
			//line template/repo/index.qtpl:49
			qw422016.E().S(r.Name)
			//line template/repo/index.qtpl:49
			qw422016.N().S(`</a></td> <td> `)
			//line template/repo/index.qtpl:51
			if r.ID == 0 {
				//line template/repo/index.qtpl:51
				qw422016.N().S(` <form method="POST" action="/repos/activate"> `)
				//line template/repo/index.qtpl:53
			} else {
				//line template/repo/index.qtpl:53
				qw422016.N().S(` <form method="POST" action="/repos/deactivate"> `)
				//line template/repo/index.qtpl:55
			}
			//line template/repo/index.qtpl:55
			qw422016.N().S(` <input type="hidden" name="id" value="`)
			//line template/repo/index.qtpl:56
			qw422016.E().V(r.ID)
			//line template/repo/index.qtpl:56
			qw422016.N().S(`"> <input type="hidden" name="repo_id" value="`)
			//line template/repo/index.qtpl:57
			qw422016.E().V(r.RepoID)
			//line template/repo/index.qtpl:57
			qw422016.N().S(`"> <input type="hidden" name="provider" value="`)
			//line template/repo/index.qtpl:58
			qw422016.E().S(r.Provider.Name)
			//line template/repo/index.qtpl:58
			qw422016.N().S(`"> `)
			//line template/repo/index.qtpl:59
			if !r.Enabled {
				//line template/repo/index.qtpl:59
				qw422016.N().S(` <button type="submit">Activate</button> `)
				//line template/repo/index.qtpl:61
			} else {
				//line template/repo/index.qtpl:61
				qw422016.N().S(` <button type="submit">Deactivate</button> `)
				//line template/repo/index.qtpl:63
			}
			//line template/repo/index.qtpl:63
			qw422016.N().S(` </form> </td> </tr> `)
			//line template/repo/index.qtpl:67
		}
		//line template/repo/index.qtpl:67
		qw422016.N().S(` </tbody> </table> </div> `)
		//line template/repo/index.qtpl:71
	}
	//line template/repo/index.qtpl:71
	qw422016.N().S(` </div> `)
//line template/repo/index.qtpl:73
}

//line template/repo/index.qtpl:73
func (p *IndexPage) WriteBody(qq422016 qtio422016.Writer) {
	//line template/repo/index.qtpl:73
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line template/repo/index.qtpl:73
	p.StreamBody(qw422016)
	//line template/repo/index.qtpl:73
	qt422016.ReleaseWriter(qw422016)
//line template/repo/index.qtpl:73
}

//line template/repo/index.qtpl:73
func (p *IndexPage) Body() string {
	//line template/repo/index.qtpl:73
	qb422016 := qt422016.AcquireByteBuffer()
	//line template/repo/index.qtpl:73
	p.WriteBody(qb422016)
	//line template/repo/index.qtpl:73
	qs422016 := string(qb422016.B)
	//line template/repo/index.qtpl:73
	qt422016.ReleaseByteBuffer(qb422016)
	//line template/repo/index.qtpl:73
	return qs422016
//line template/repo/index.qtpl:73
}

//line template/repo/index.qtpl:75
func (p *IndexPage) StreamHeader(qw422016 *qt422016.Writer) {
	//line template/repo/index.qtpl:75
	qw422016.N().S(` Repositories `)
//line template/repo/index.qtpl:77
}

//line template/repo/index.qtpl:77
func (p *IndexPage) WriteHeader(qq422016 qtio422016.Writer) {
	//line template/repo/index.qtpl:77
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line template/repo/index.qtpl:77
	p.StreamHeader(qw422016)
	//line template/repo/index.qtpl:77
	qt422016.ReleaseWriter(qw422016)
//line template/repo/index.qtpl:77
}

//line template/repo/index.qtpl:77
func (p *IndexPage) Header() string {
	//line template/repo/index.qtpl:77
	qb422016 := qt422016.AcquireByteBuffer()
	//line template/repo/index.qtpl:77
	p.WriteHeader(qb422016)
	//line template/repo/index.qtpl:77
	qs422016 := string(qb422016.B)
	//line template/repo/index.qtpl:77
	qt422016.ReleaseByteBuffer(qb422016)
	//line template/repo/index.qtpl:77
	return qs422016
//line template/repo/index.qtpl:77
}

//line template/repo/index.qtpl:79
func (p *IndexPage) StreamActions(qw422016 *qt422016.Writer) {
	//line template/repo/index.qtpl:79
	qw422016.N().S(` `)
	//line template/repo/index.qtpl:80
	if len(p.User.Providers) > 0 {
		//line template/repo/index.qtpl:80
		qw422016.N().S(` <form method="POST" action="/repos/reload"> `)
		//line template/repo/index.qtpl:82
		qw422016.N().S(p.CSRF)
		//line template/repo/index.qtpl:82
		qw422016.N().S(` <input type="hidden" name="_method" value="PATCH"> <button type="submit" class="btn btn-primary">Reload</button> </form> `)
		//line template/repo/index.qtpl:86
	}
	//line template/repo/index.qtpl:86
	qw422016.N().S(` `)
//line template/repo/index.qtpl:87
}

//line template/repo/index.qtpl:87
func (p *IndexPage) WriteActions(qq422016 qtio422016.Writer) {
	//line template/repo/index.qtpl:87
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line template/repo/index.qtpl:87
	p.StreamActions(qw422016)
	//line template/repo/index.qtpl:87
	qt422016.ReleaseWriter(qw422016)
//line template/repo/index.qtpl:87
}

//line template/repo/index.qtpl:87
func (p *IndexPage) Actions() string {
	//line template/repo/index.qtpl:87
	qb422016 := qt422016.AcquireByteBuffer()
	//line template/repo/index.qtpl:87
	p.WriteActions(qb422016)
	//line template/repo/index.qtpl:87
	qs422016 := string(qb422016.B)
	//line template/repo/index.qtpl:87
	qt422016.ReleaseByteBuffer(qb422016)
	//line template/repo/index.qtpl:87
	return qs422016
//line template/repo/index.qtpl:87
}

//line template/repo/index.qtpl:89
func (p *IndexPage) StreamNavigation(qw422016 *qt422016.Writer) {
//line template/repo/index.qtpl:89
}

//line template/repo/index.qtpl:89
func (p *IndexPage) WriteNavigation(qq422016 qtio422016.Writer) {
	//line template/repo/index.qtpl:89
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line template/repo/index.qtpl:89
	p.StreamNavigation(qw422016)
	//line template/repo/index.qtpl:89
	qt422016.ReleaseWriter(qw422016)
//line template/repo/index.qtpl:89
}

//line template/repo/index.qtpl:89
func (p *IndexPage) Navigation() string {
	//line template/repo/index.qtpl:89
	qb422016 := qt422016.AcquireByteBuffer()
	//line template/repo/index.qtpl:89
	p.WriteNavigation(qb422016)
	//line template/repo/index.qtpl:89
	qs422016 := string(qb422016.B)
	//line template/repo/index.qtpl:89
	qt422016.ReleaseByteBuffer(qb422016)
	//line template/repo/index.qtpl:89
	return qs422016
//line template/repo/index.qtpl:89
}
