{%
import (
	"github.com/andrewpillar/thrall/model"
	"github.com/andrewpillar/thrall/template"
	"github.com/andrewpillar/thrall/template/build"
)
%}

{% code
type ShowPage struct {
	template.Page

	Job *model.Job
}
%}

{% collapsespace %}
{% func (p *ShowPage) Title() %}
	{%s p.Job.Name %} - Thrall
{% endfunc %}

{% func (p *ShowPage) Body() %}
	<div class="panel">
		{% if p.Job.Output.Valid && p.Job.Output.String != "" %}
			<div class="panel-header">
				<ul class="panel-actions">
					<li><a class="btn btn-primary" href="/builds/{%v p.Job.BuildID %}/jobs/{%v p.Job.ID %}/output/raw">{% cat "../../svgs/document.svg" %}<span>Raw</span></a></li>
				</ul>
			</div>
			{%= template.RenderCode(p.Job.Output.String) %}
		{% else %}
			<div class="panel-message muted">No job output has been produced.</div>
		{% endif %}
	</div>
{% endfunc %}

{% func (p *ShowPage) Header() %}
	<a href="/builds/{%v p.Job.Stage.BuildID %}" class="back">{% cat "../../svgs/back.svg" %}</a> Build #{%v p.Job.BuildID %} / {%s p.Job.Stage.Name %} - {%s p.Job.Name %} {%= build.RenderStatus(p.Job.Status) %}
{% endfunc %}

{% func (p *ShowPage) Actions() %}{% endfunc %}
{% func (p *ShowPage) Navigation() %}{% endfunc %}
{% endcollapsespace %}
