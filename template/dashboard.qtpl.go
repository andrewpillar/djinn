// This file is automatically generated by qtc from "dashboard.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line template/dashboard.qtpl:2
package template

//line template/dashboard.qtpl:2
import (
	"regexp"

	"github.com/andrewpillar/thrall/model"
)

//line template/dashboard.qtpl:9
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line template/dashboard.qtpl:9
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line template/dashboard.qtpl:11
var (
	namespacesURI = "\\/namespaces\\/?[0-9]*?"
	settingsURI   = "\\/settings\\/?"
)

type Dashboard struct {
	page

	URI  string
	User *model.User
}

func NewDashboard(p page, uri string, u *model.User) *Dashboard {
	return &Dashboard{page: p, URI: uri, User: u}
}

func uriMatch(pattern, uri string) bool {
	matched, err := regexp.Match(pattern, []byte(uri))

	if err != nil {
		return false
	}

	return matched
}

//line template/dashboard.qtpl:38
func (p *Dashboard) StreamBody(qw422016 *qt422016.Writer) {
	//line template/dashboard.qtpl:38
	qw422016.N().S(`
<div class="dashboard-content">`)
	//line template/dashboard.qtpl:39
	p.page.StreamBody(qw422016)
	//line template/dashboard.qtpl:39
	qw422016.N().S(`</div>
<div class="dashboard-sidebar">
	<div class="header">
		<div class="brand">
			<div class="left"></div>
			<div class="right"></div>
		</div>
		<div class="title">Thrall</div>
	</div>
	<ul>
		<li class="nav-header">MANAGE</li>
		<li><a href="/" `)
	//line template/dashboard.qtpl:50
	if p.URI == "/" {
		//line template/dashboard.qtpl:50
		qw422016.N().S(`class="active"`)
		//line template/dashboard.qtpl:50
	}
	//line template/dashboard.qtpl:50
	qw422016.N().S(`>Builds</a></li>
		<li><a href="/namespaces" `)
	//line template/dashboard.qtpl:51
	if uriMatch(namespacesURI, p.URI) {
		//line template/dashboard.qtpl:51
		qw422016.N().S(`class="active"`)
		//line template/dashboard.qtpl:51
	}
	//line template/dashboard.qtpl:51
	qw422016.N().S(`>Namespaces</a></li>
		<li class="nav-header">ACCOUNT</li>
		<li><a href="/settings" `)
	//line template/dashboard.qtpl:53
	if uriMatch(settingsURI, p.URI) {
		//line template/dashboard.qtpl:53
		qw422016.N().S(`class="active"`)
		//line template/dashboard.qtpl:53
	}
	//line template/dashboard.qtpl:53
	qw422016.N().S(`>Settings</a></li>
		<li>
			<form method="POST" action="/logout">
				<button type="submit">Logout</button>
			</form>
		</li>
	</ul>
</div>
`)
//line template/dashboard.qtpl:61
}

//line template/dashboard.qtpl:61
func (p *Dashboard) WriteBody(qq422016 qtio422016.Writer) {
	//line template/dashboard.qtpl:61
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line template/dashboard.qtpl:61
	p.StreamBody(qw422016)
	//line template/dashboard.qtpl:61
	qt422016.ReleaseWriter(qw422016)
//line template/dashboard.qtpl:61
}

//line template/dashboard.qtpl:61
func (p *Dashboard) Body() string {
	//line template/dashboard.qtpl:61
	qb422016 := qt422016.AcquireByteBuffer()
	//line template/dashboard.qtpl:61
	p.WriteBody(qb422016)
	//line template/dashboard.qtpl:61
	qs422016 := string(qb422016.B)
	//line template/dashboard.qtpl:61
	qt422016.ReleaseByteBuffer(qb422016)
	//line template/dashboard.qtpl:61
	return qs422016
//line template/dashboard.qtpl:61
}
