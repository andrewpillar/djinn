// Code generated by qtc from "cron_index.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line template/cron_index.qtpl:2
package template

//line template/cron_index.qtpl:2
import (
	"strings"

	"djinn-ci.com/cron"
	"djinn-ci.com/template/form"
)

//line template/cron_index.qtpl:10
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line template/cron_index.qtpl:10
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line template/cron_index.qtpl:11
type CronIndex struct {
	*Paginator

	Crons []*cron.Cron
}

//line template/cron_index.qtpl:19
func (p *CronIndex) StreamTitle(qw422016 *qt422016.Writer) {
//line template/cron_index.qtpl:19
	qw422016.N().S(` Cron Jobs `)
//line template/cron_index.qtpl:21
}

//line template/cron_index.qtpl:21
func (p *CronIndex) WriteTitle(qq422016 qtio422016.Writer) {
//line template/cron_index.qtpl:21
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/cron_index.qtpl:21
	p.StreamTitle(qw422016)
//line template/cron_index.qtpl:21
	qt422016.ReleaseWriter(qw422016)
//line template/cron_index.qtpl:21
}

//line template/cron_index.qtpl:21
func (p *CronIndex) Title() string {
//line template/cron_index.qtpl:21
	qb422016 := qt422016.AcquireByteBuffer()
//line template/cron_index.qtpl:21
	p.WriteTitle(qb422016)
//line template/cron_index.qtpl:21
	qs422016 := string(qb422016.B)
//line template/cron_index.qtpl:21
	qt422016.ReleaseByteBuffer(qb422016)
//line template/cron_index.qtpl:21
	return qs422016
//line template/cron_index.qtpl:21
}

//line template/cron_index.qtpl:23
func (p *CronIndex) StreamHeader(qw422016 *qt422016.Writer) {
//line template/cron_index.qtpl:23
	qw422016.N().S(` `)
//line template/cron_index.qtpl:24
	p.StreamTitle(qw422016)
//line template/cron_index.qtpl:24
	qw422016.N().S(` `)
//line template/cron_index.qtpl:25
}

//line template/cron_index.qtpl:25
func (p *CronIndex) WriteHeader(qq422016 qtio422016.Writer) {
//line template/cron_index.qtpl:25
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/cron_index.qtpl:25
	p.StreamHeader(qw422016)
//line template/cron_index.qtpl:25
	qt422016.ReleaseWriter(qw422016)
//line template/cron_index.qtpl:25
}

//line template/cron_index.qtpl:25
func (p *CronIndex) Header() string {
//line template/cron_index.qtpl:25
	qb422016 := qt422016.AcquireByteBuffer()
//line template/cron_index.qtpl:25
	p.WriteHeader(qb422016)
//line template/cron_index.qtpl:25
	qs422016 := string(qb422016.B)
//line template/cron_index.qtpl:25
	qt422016.ReleaseByteBuffer(qb422016)
//line template/cron_index.qtpl:25
	return qs422016
//line template/cron_index.qtpl:25
}

//line template/cron_index.qtpl:27
func (p *CronIndex) StreamNavigation(qw422016 *qt422016.Writer) {
//line template/cron_index.qtpl:27
}

//line template/cron_index.qtpl:27
func (p *CronIndex) WriteNavigation(qq422016 qtio422016.Writer) {
//line template/cron_index.qtpl:27
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/cron_index.qtpl:27
	p.StreamNavigation(qw422016)
//line template/cron_index.qtpl:27
	qt422016.ReleaseWriter(qw422016)
//line template/cron_index.qtpl:27
}

//line template/cron_index.qtpl:27
func (p *CronIndex) Navigation() string {
//line template/cron_index.qtpl:27
	qb422016 := qt422016.AcquireByteBuffer()
//line template/cron_index.qtpl:27
	p.WriteNavigation(qb422016)
//line template/cron_index.qtpl:27
	qs422016 := string(qb422016.B)
//line template/cron_index.qtpl:27
	qt422016.ReleaseByteBuffer(qb422016)
//line template/cron_index.qtpl:27
	return qs422016
//line template/cron_index.qtpl:27
}

//line template/cron_index.qtpl:28
func (p *CronIndex) StreamFooter(qw422016 *qt422016.Writer) {
//line template/cron_index.qtpl:28
}

//line template/cron_index.qtpl:28
func (p *CronIndex) WriteFooter(qq422016 qtio422016.Writer) {
//line template/cron_index.qtpl:28
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/cron_index.qtpl:28
	p.StreamFooter(qw422016)
//line template/cron_index.qtpl:28
	qt422016.ReleaseWriter(qw422016)
//line template/cron_index.qtpl:28
}

//line template/cron_index.qtpl:28
func (p *CronIndex) Footer() string {
//line template/cron_index.qtpl:28
	qb422016 := qt422016.AcquireByteBuffer()
//line template/cron_index.qtpl:28
	p.WriteFooter(qb422016)
//line template/cron_index.qtpl:28
	qs422016 := string(qb422016.B)
//line template/cron_index.qtpl:28
	qt422016.ReleaseByteBuffer(qb422016)
//line template/cron_index.qtpl:28
	return qs422016
//line template/cron_index.qtpl:28
}

//line template/cron_index.qtpl:30
func (p *CronIndex) StreamActions(qw422016 *qt422016.Writer) {
//line template/cron_index.qtpl:30
	qw422016.N().S(` `)
//line template/cron_index.qtpl:31
	if _, ok := p.User.Permissions["cron:write"]; ok {
//line template/cron_index.qtpl:31
		qw422016.N().S(` <li><a href="/cron/create" class="btn btn-primary">Create</a></li> `)
//line template/cron_index.qtpl:33
	}
//line template/cron_index.qtpl:33
	qw422016.N().S(` `)
//line template/cron_index.qtpl:34
}

//line template/cron_index.qtpl:34
func (p *CronIndex) WriteActions(qq422016 qtio422016.Writer) {
//line template/cron_index.qtpl:34
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/cron_index.qtpl:34
	p.StreamActions(qw422016)
//line template/cron_index.qtpl:34
	qt422016.ReleaseWriter(qw422016)
//line template/cron_index.qtpl:34
}

//line template/cron_index.qtpl:34
func (p *CronIndex) Actions() string {
//line template/cron_index.qtpl:34
	qb422016 := qt422016.AcquireByteBuffer()
//line template/cron_index.qtpl:34
	p.WriteActions(qb422016)
//line template/cron_index.qtpl:34
	qs422016 := string(qb422016.B)
//line template/cron_index.qtpl:34
	qt422016.ReleaseByteBuffer(qb422016)
//line template/cron_index.qtpl:34
	return qs422016
//line template/cron_index.qtpl:34
}

//line template/cron_index.qtpl:36
func (p *CronIndex) streamrenderCronItem(qw422016 *qt422016.Writer, c *cron.Cron) {
//line template/cron_index.qtpl:36
	qw422016.N().S(` <tr> <td><a href="`)
//line template/cron_index.qtpl:38
	qw422016.E().S(c.Endpoint())
//line template/cron_index.qtpl:38
	qw422016.N().S(`">`)
//line template/cron_index.qtpl:38
	qw422016.E().S(c.Name)
//line template/cron_index.qtpl:38
	qw422016.N().S(`</a></td> <td>`)
//line template/cron_index.qtpl:39
	qw422016.E().S(strings.ToUpper(c.Schedule.String()))
//line template/cron_index.qtpl:39
	qw422016.N().S(`</td> <td>`)
//line template/cron_index.qtpl:40
	qw422016.E().S(c.NextRun.Format("Mon, Jan 2 15:04 2006"))
//line template/cron_index.qtpl:40
	qw422016.N().S(`</td> <td class="align-right"> `)
//line template/cron_index.qtpl:42
	if p.User.ID == c.UserID || c.Namespace != nil && c.Namespace.UserID == p.User.ID {
//line template/cron_index.qtpl:42
		qw422016.N().S(` <form method="POST" action="`)
//line template/cron_index.qtpl:43
		qw422016.E().S(c.Endpoint())
//line template/cron_index.qtpl:43
		qw422016.N().S(`"> `)
//line template/cron_index.qtpl:44
		form.StreamMethod(qw422016, "DELETE")
//line template/cron_index.qtpl:44
		qw422016.N().S(` `)
//line template/cron_index.qtpl:45
		qw422016.N().V(p.CSRF)
//line template/cron_index.qtpl:45
		qw422016.N().S(` <button type="submit" class="btn btn-danger">Delete</button> </form> `)
//line template/cron_index.qtpl:48
	}
//line template/cron_index.qtpl:48
	qw422016.N().S(` </td> </tr> `)
//line template/cron_index.qtpl:51
}

//line template/cron_index.qtpl:51
func (p *CronIndex) writerenderCronItem(qq422016 qtio422016.Writer, c *cron.Cron) {
//line template/cron_index.qtpl:51
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/cron_index.qtpl:51
	p.streamrenderCronItem(qw422016, c)
//line template/cron_index.qtpl:51
	qt422016.ReleaseWriter(qw422016)
//line template/cron_index.qtpl:51
}

//line template/cron_index.qtpl:51
func (p *CronIndex) renderCronItem(c *cron.Cron) string {
//line template/cron_index.qtpl:51
	qb422016 := qt422016.AcquireByteBuffer()
//line template/cron_index.qtpl:51
	p.writerenderCronItem(qb422016, c)
//line template/cron_index.qtpl:51
	qs422016 := string(qb422016.B)
//line template/cron_index.qtpl:51
	qt422016.ReleaseByteBuffer(qb422016)
//line template/cron_index.qtpl:51
	return qs422016
//line template/cron_index.qtpl:51
}

//line template/cron_index.qtpl:53
func (p *CronIndex) StreamBody(qw422016 *qt422016.Writer) {
//line template/cron_index.qtpl:53
	qw422016.N().S(` <div class="panel"> `)
//line template/cron_index.qtpl:55
	if len(p.Crons) == 0 {
//line template/cron_index.qtpl:55
		qw422016.N().S(` `)
//line template/cron_index.qtpl:56
		if query := p.Query.Get("search"); query != "" {
//line template/cron_index.qtpl:56
			qw422016.N().S(` <div class="panel-header">`)
//line template/cron_index.qtpl:57
			p.StreamSearch(qw422016, "Find a cron job...")
//line template/cron_index.qtpl:57
			qw422016.N().S(`</div> <div class="panel-message muted">No results found.</div> `)
//line template/cron_index.qtpl:59
		} else {
//line template/cron_index.qtpl:59
			qw422016.N().S(` <div class="panel-message muted"> Create a cron job to have builds repeat at a set schedule. </div> `)
//line template/cron_index.qtpl:63
		}
//line template/cron_index.qtpl:63
		qw422016.N().S(` `)
//line template/cron_index.qtpl:64
	} else {
//line template/cron_index.qtpl:64
		qw422016.N().S(` <div class="panel-header">`)
//line template/cron_index.qtpl:65
		p.StreamSearch(qw422016, "Find a variable...")
//line template/cron_index.qtpl:65
		qw422016.N().S(`</div> <table class="table"> <thead> <tr> <th>NAME</th> <th>SCHEDULE</th> <th>NEXT RUN</th> <th></th> <th></th> </tr> </thead> <tbody> `)
//line template/cron_index.qtpl:77
		for _, c := range p.Crons {
//line template/cron_index.qtpl:77
			qw422016.N().S(` `)
//line template/cron_index.qtpl:78
			p.streamrenderCronItem(qw422016, c)
//line template/cron_index.qtpl:78
			qw422016.N().S(` `)
//line template/cron_index.qtpl:79
		}
//line template/cron_index.qtpl:79
		qw422016.N().S(` </tbody> </table> `)
//line template/cron_index.qtpl:82
	}
//line template/cron_index.qtpl:82
	qw422016.N().S(` </div> `)
//line template/cron_index.qtpl:84
	p.Paginator.StreamNavigation(qw422016)
//line template/cron_index.qtpl:84
	qw422016.N().S(` `)
//line template/cron_index.qtpl:85
}

//line template/cron_index.qtpl:85
func (p *CronIndex) WriteBody(qq422016 qtio422016.Writer) {
//line template/cron_index.qtpl:85
	qw422016 := qt422016.AcquireWriter(qq422016)
//line template/cron_index.qtpl:85
	p.StreamBody(qw422016)
//line template/cron_index.qtpl:85
	qt422016.ReleaseWriter(qw422016)
//line template/cron_index.qtpl:85
}

//line template/cron_index.qtpl:85
func (p *CronIndex) Body() string {
//line template/cron_index.qtpl:85
	qb422016 := qt422016.AcquireByteBuffer()
//line template/cron_index.qtpl:85
	p.WriteBody(qb422016)
//line template/cron_index.qtpl:85
	qs422016 := string(qb422016.B)
//line template/cron_index.qtpl:85
	qt422016.ReleaseByteBuffer(qb422016)
//line template/cron_index.qtpl:85
	return qs422016
//line template/cron_index.qtpl:85
}
