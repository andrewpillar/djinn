{%
import (
	"fmt"

	"github.com/andrewpillar/thrall/model"
	"github.com/andrewpillar/thrall/template"
)
%}

{% collapsespace %}
{% func RenderStatusNav(uri, status string) %}
	{% stripspace %}
		<ul class="panel-nav">
			<li>
				<a href="{%s uri %}" {% if status == "" %}class="active"{% endif %}>
					{% cat "../../svgs/build.svg" %}<span>All</span>
				</a>
			</li>
			<li>
				<a href="?status=queued" {% if status == "queued" %}class="active"{% endif %}>
					{% cat "../../svgs/hourglass.svg" %}<span>Queued</span>
				</a>
			</li>
			<li>
				<a href="?status=running" {% if status == "running" %}class="active"{% endif %}>
					{% cat "../../svgs/timer.svg" %}<span>Running</span>
				</a>
			</li>
			<li>
				<a href="?status=passed" {% if status == "passed" %}class="active"{% endif %}>
					{% cat "../../svgs/check.svg" %}<span>Passed</span>
				</a>
			</li>
			<li>
				<a href="?status=failed" {% if status == "failed" %}class="active"{% endif %}>
					{% cat "../../svgs/close.svg" %}<span>Failed</span>
				</a>
			</li>
		</ul>
	{% endstripspace %}
{% endfunc %}

{% func RenderTable(builds []*model.Build) %}
	<table class="table">
		<thead>
			<tr>
				<th>STATUS</th>
				<th>BUILD</th>
				<th>NAMESPACE</th>
				<th></th>
				<th></th>
			</tr>
		</thead>
		<tbody>
		{% for _, b := range builds %}
			<tr>
				<td>{%= template.RenderStatus(b.Status) %}</td>
				<td><a href="{%s b.UIEndpoint() %}">#{%v b.ID %}</a></td>
				<td>
					{% if b.Namespace != nil %}
						<a href="{%s b.Namespace.UIEndpoint() %}">{%s b.Namespace.Path %}</a>
					{% else %}
						<span class="muted">--</span>
					{% endif %}
				</td>
				<td class="align-right">
					{% for _, t := range b.Tags %}
						<a class="pill pill-light" href="?tag={%s t.Name %}">{%s t.Name %}</a>
					{% endfor %}
				</td>
				<td class="align-right">
					{% if !b.FinishedAt.Valid || !b.StartedAt.Valid %}
						<span class="muted">--</span>
					{% else %}
						{%v b.FinishedAt.Time.Sub(b.StartedAt.Time) %}
					{% endif %}
				</td>
			</tr>
		{% endfor %}
		</tbody>
	</table>
{% endfunc %}

{% func RenderObjectTable(oo []*model.BuildObject) %}
	<table class="table">
		<thead>
			<tr>
				<th>SOURCE</th>
				<th>NAME</th>
				<th>TYPE</th>
				<th>MD5</th>
				<th>SHA256</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			{% for _, o := range oo %}
				<tr>
					<td>
						{% if o.Object != nil %}
							<a href="{%s o.Object.UIEndpoint() %}">{%s o.Source %}</a>
						{% else %}
							<a title="Object not found"><strike>{%s o.Source %}</strike></a>
						{% endif %}
					</td>
					<td><span class="code">{%s o.Name %}</span></td>
					<td>
						{% if o.Object != nil %}
							<span class="code">{%s o.Object.Type %}</span>
						{% else %}
							<span class="code">--</span>
						{% endif %}
					</td>
					<td>
						{% if o.Object != nil %}
							<span class="code">{%s fmt.Sprintf("%x", o.Object.MD5) %}</span>
						{% else %}
							<span class="code">--</span>
						{% endif %}
					</td>
					<td>
						{% if o.Object != nil %}
							<span class="code">{%s fmt.Sprintf("%x", o.Object.SHA256) %}</span>
						{% else %}
							<span class="code">--</span>
						{% endif %}
					</td>
					<td class="align-right">
						{% if o.Placed %}
							<span class="pill pill-green">{% cat "../../svgs/check.svg"  %} Placed</span>
						{% else %}
							<span class="pill pill-red">{% cat "../../svgs/close.svg" %} Not Placed</span>
						{% endif %}
					</td>
				</tr>
			{% endfor %}
		</tbody>
	</table>
{% endfunc %}

{% func RenderVariableTable(vv []*model.BuildVariable) %}
	<table class="table">
		<thead>
			<tr>
				<th>KEY</th>
				<th>VALUE</th>
				<th>FROM MANIFEST</th>
			</tr>
		</thead>
		<tbody>
			{% for _, v := range vv %}
				<tr>
					<td><span class="code">{%s v.Key %}</span></td>
					<td><span class="code">{%s v.Value %}</span></td>
					<td>{% if v.VariableID.Valid %}False{% else %}True{% endif %}</td>
				</tr>
			{% endfor %}
		</tbody>
	</table>
{% endfunc %}
{% endcollapsespace %}
