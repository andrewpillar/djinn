{%
import (
	"net/http"
	"regexp"

	"djinn-ci.com/alert"
	"djinn-ci.com/auth"
	"djinn-ci.com/env"

	"github.com/gorilla/sessions"
)
%}

{%
interface Partial {
	Title()

	Header()

	Actions()

	Navigation()

	Body()

	Footer()
}
%}

{% code
type Dashboard struct {
	Partial
	*Page

	Alert alert.Alert
}

func NewDashboard(u *auth.User, sess *sessions.Session, r *http.Request) *Dashboard {
	return &Dashboard{
		Page:  NewPage(u, r),
		Alert: alert.First(sess),
	}
}

var verifiedAlert = alert.Alert{
	Level:   alert.Danger,
	Message: `Your account is not verified, go to your <a href="/settings">settings</a> to verify it.`,
	HTML:    true,
}

func verified(u *auth.User) bool {
	if v, ok := u.RawData["verified"]; ok {
		b, _ := v.(bool)
		return b
	}
	return false
}

type NavLink struct {
	Title     string
	Href      string
	Icon      string
	Pattern   *regexp.Regexp
	Condition func() bool
}

var sidebarLinks = []NavLink{
	{
		Title:   "Builds",
		Href:    "/builds",
		Icon:    "static/svg/build.svg",
		Pattern: regexp.MustCompile("(^\\/builds\\/?|^\\/builds\\/create$|^\\/b/[_\\-a-zA-Z0-9.]+\\/[0-9]+\\/?[a-z]*)"),
	},
	{
		Title:   "Namespaces",
		Href:    "/namespaces",
		Icon:    "static/svg/folder.svg",
		Pattern: regexp.MustCompile("(\\/namespaces\\/?|\\/n\\/[_\\-a-zA-Z0-9.]+\\/[\\-a-zA-Z0-9\\/]*\\/?)"),
	},
	{
		Title:   "Cron",
		Href:    "/cron",
		Icon:    "static/svg/timer.svg",
		Pattern: regexp.MustCompile("\\/cron\\/?"),
	},
	{
		Title:   "Invites",
		Href:    "/invites",
		Icon:    "static/svg/mail.svg",
		Pattern: regexp.MustCompile("^\\/invites\\/?$"),
	},
	{
		Title:   "Repositories",
		Href:    "/repos",
		Icon:    "static/svg/repo.svg",
		Pattern: regexp.MustCompile("^\\/repos\\/?$"),
	},
	{
		Title:   "Images",
		Href:    "/images",
		Icon:    "static/svg/image.svg",
		Pattern: regexp.MustCompile("^\\/images\\/?"),
	},
	{
		Title:   "Objects",
		Href:    "/objects",
		Icon:    "static/svg/upload.svg",
		Pattern: regexp.MustCompile("^\\/objects\\/?"),
	},
	{
		Title:   "Variables",
		Href:    "/variables",
		Icon:    "static/svg/code.svg",
		Pattern: regexp.MustCompile("^\\/variables\\/?"),
	},
	{
		Title:   "SSH Keys",
		Href:    "/keys",
		Icon:    "static/svg/code.svg",
		Pattern: regexp.MustCompile("^\\/keys\\/?"),
	},
}

var settingsLink = NavLink{
	Title:   "Settings",
	Href:    "/settings",
	Icon:    "static/svg/settings.svg",
	Pattern: regexp.MustCompile("^\\/settings\\/?"),
}
%}

{% collapsespace %}
{% func (l *NavLink) Render(url string) %}
	{% if l.Condition == nil || l.Condition() %}
		{% if l.Pattern.Match([]byte(url)) %}
			<a class="active" href="{%s l.Href %}" title="{%s l.Title %}">
				{%v= icon(l.Icon) %}<span>{%s l.Title %}</span>
			</a>
		{% else %}
			<a href="{%s l.Href %}" title="{%s l.Title %}">
				{%v= icon(l.Icon) %}<span>{%s l.Title %}</span>
			</a>
		{% endif %}
	{% endif %}
{% endfunc %}

{% func Alert(a alert.Alert, url string) %}
	{% if a.Message != "" %}
		<div class="alert alert-{%s a.Level.String() %}">
			<div class="alert-message">
				{% if a.HTML %}
					{%s= a.Message %}
				{% else %}
					{%s a.Message %}
				{% endif %}
			</div>
			{% if a.Close %}
				<a href="{%s url %}" class="alert-close">{% cat "static/svg/close.svg" %}</a>
			{% endif %}
		</div>
	{% endif %}
{% endfunc %}

{% func (p *Dashboard) sidebar(links []NavLink) %}
	<div class="sidebar">
		<div class="sidebar-header">
			{%= Logo() %}
			<h2>Djinn CI</h2>
		</div>
		{% if p.User.ID == 0 %}
			<div class="sidebar-auth">
				<a class="login" href="/login">Login</a>
				<a class="register" href="/register">Register</a>
			</div>
		{% else %}
			<ul class="sidebar-nav">
				{% if env.DJINN_API_DOCS != "" || env.DJINN_USER_DOCS != "" %}
					<li class="sidebar-nav-header">DOCS</li>
				{% endif %}
				{% if env.DJINN_API_DOCS != "" %}
					<li>
						<a title="API Documentation" href="{%s env.DJINN_API_DOCS %}" target="_blank">
							{% cat "static/svg/code.svg" %}<span>API</span>
						</a>
					</li>
				{% endif %}
				{% if env.DJINN_USER_DOCS != "" %}
					<li>
						<a title="User Documentation" href="{%s env.DJINN_USER_DOCS %}" target="_blank">
							{% cat "static/svg/list.svg" %}<span>User</span>
						</a>
					</li>
				{% endif %}
				<li class="sidebar-nav-header">MANAGE</li>
				{% for _, link := range links %}
					<li>{%= link.Render(p.URL.Path) %}</li>
				{% endfor %}
				<li class="sidebar-nav-header">ACCOUNT</li>
				<li>{%= settingsLink.Render(p.URL.Path) %}</li>
				<li>
					<form method="POST" action="/logout">
						{%v= p.CSRF %}
						<button title="Logout" type="submit">
							{% cat "static/svg/logout.svg" %}<span>Logout</span>
						</button>
					</form>
				</li>
			</ul>
		{% endif %}
	</div>
{% endfunc %}

{% func (p *Dashboard) Body() %}
	<div class="dashboard">
		<div class="dashboard-content">
			{% if !verified(p.User) %}
				{%= Alert(verifiedAlert, "") %}
			{% endif %}
			{%= Alert(p.Alert, p.URL.Path) %}
			<div class="dashboard-wrap">
				<div class="dashboard-header">
					<div class="overflow">
						<h1>{%= p.Partial.Header() %}</h1>
						<ul class="dashboard-actions">{%= p.Partial.Actions() %}</ul>
					</div>
					<ul class="dashboard-nav">{%= p.Partial.Navigation() %}</ul>
				</div>
				<div class="dashboard-body">{%= p.Partial.Body() %}</div>
			</div>
		</div>
		{%= p.sidebar(sidebarLinks) %}
	</div>
{% endfunc %}
{% endcollapsespace %}
