{%
import (
	"github.com/andrewpillar/djinn/database"
	"github.com/andrewpillar/djinn/provider"
	"github.com/andrewpillar/djinn/template"
)
%}

{% code
type RepoIndex struct {
	template.BasePage

	CSRF      string
	Paginator database.Paginator
	Repos     []*provider.Repo
	Provider  *provider.Provider
	Providers []*provider.Provider
}

var providerNames = map[string]string{
	"github": "GitHub",
	"gitlab": "GitLab",
}
%}

{% collapsespace %}
{% func (p *RepoIndex) Title() %}
	Repositories - Djinn
{% endfunc %}

{% func (p *RepoIndex) Header() %}
	Repositories
{% endfunc %}

{% func (p *RepoIndex) Body() %}
	<div class="panel">
		<div class="panel-header">
			{% stripspace %}
			<ul class="panel-nav">
				{% for _, prv := range p.Providers %}
					<li>
						<a href="{%s p.URL.Path %}?provider={%s prv.Name %}" {% if p.Provider.Name == prv.Name %}class="active"{% endif %}>{%s providerNames[prv.Name] %}</a>
					</li>
				{% endfor %}
			</ul>
			{% endstripspace %}
		</div>
		{% if !p.Provider.Connected && len(p.Providers) == 0 %}
			<div class="panel-message muted">
				Connect to a Git provider to trigger builds on pushes, and pull requests. Get started by connecting from your account <a href="/settings">settings</a>.
			</div>
		{% elseif !p.Provider.Connected %}
			<div class="panel-message muted">
				Connect to {%s providerNames[p.Provider.Name] %} to trigger builds on pushes, and pull requests. Get started by connecting from your account <a href="/settings">settings</a>.
			</div>
		{% elseif len(p.Repos) == 0 %}
			<div class="panel-message muted">No {%s providerNames[p.Provider.Name] %} repositories.</div>
		{% else %}
			<table class="table">
				<thead>
					<tr>
						<th>NAME</th>
						<th></th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					{% for _, r := range p.Repos %}
						<tr>
							<td>
								<span class="muted">
									{% switch r.Provider.Name %}
									{% case "github" %}
										{% cat "../../static/svg/github.svg" %}
									{% case "gitlab" %}
										{% cat "../../static/svg/gitlab.svg" %}
									{% endswitch %}
								</span>
								<a href="{%s r.Href %}" target="_blank">{%s r.Name %}</a>
							</td>
							{% if !r.Provider.Connected %}
								<td class="warning">{% cat "../../static/svg/warning.svg" %} Disconnected from {%s providerNames[r.Provider.Name] %}</td>
							{% else %}
								<td></td>
							{% endif %}
							<td class="align-right">
								{% if !r.Enabled %}
									<form method="POST" action="/repos/enable">
										<input type="hidden" name="provider_id" value="{%v r.ProviderID %}">
										<input type="hidden" name="repo_id" value="{%v r.RepoID %}">
										<input type="hidden" name="name" value="{%s r.Name %}">
										<input type="hidden" name="href" value="{%s r.Href %}">
								{% else %}
									<form method="POST" action="/repos/disable/{%v r.ID %}">
										<input type="hidden" name="_method" value="DELETE"/>
								{% endif %}
									{%s= p.CSRF %}
								{% if !r.Enabled %}
									<button type="submit" class="btn btn-primary" {% if !r.Provider.Connected %}disabled="true"{% endif %}>Enable</button>
								{% else %}
									<button type="submit" class="btn btn-danger" {% if !r.Provider.Connected %}disabled="true"{% endif %}>Disable</button>
								{% endif %}
								</form>
							</td>
						</tr>
					{% endfor %}
				</tbody>
			</table>
		{% endif %}
	</div>
	{%= template.RenderPaginator(p.URL, p.Paginator) %}
{% endfunc %}

{% func (p *RepoIndex) Actions() %}
	{% if len(p.Providers) > 0 %}
		<form method="POST" action="/repos/reload?provider={%s p.Provider.Name %}&page={%v p.Paginator.Page %}">
			{%s= p.CSRF %}
			<input type="hidden" name="_method" value="PATCH">
			<button type="submit" class="btn btn-primary">Reload</button>
		</form>
	{% endif %}
{% endfunc %}

{% func (p *RepoIndex) Navigation() %}{% endfunc %}
{% endcollapsespace %}
