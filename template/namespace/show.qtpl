{%
import (
	"strings"

	"github.com/andrewpillar/thrall/model"
	"github.com/andrewpillar/thrall/template"
	"github.com/andrewpillar/thrall/template/build"
)
%}

{% code
type ShowPage struct {
	*template.Page

	Namespace *model.Namespace
	Builds    []*model.Build
}

type ShowNamespacesPage struct {
	*ShowPage

	Namespaces []*model.Namespace
	Search     string
}
%}

{% collapsespace %}
{% func renderFullName(username, fullName string) %}
	{% code
		parts := strings.Split(fullName, "/")
	%}
	{% for i, p := range parts %}
		<a href="/u/{%s username %}/{%s strings.Join(parts[:i + 1], "/") %}">{%s p %}</a>
		{% if i != len(parts) - 1 %}<span> / </span>{% endif %}
	{% endfor %}
{% endfunc %}

{% func (p *ShowPage) Title() %}
{%s p.Namespace.FullName %} - Thrall
{% endfunc %}

{% func (p *ShowPage) Body() %}
{%= build.RenderBuilds(p.Builds, "") %}
{% endfunc %}

{% func (p *ShowPage) Header() %}
{% if p.Namespace.Parent != nil %}
	<a class="back" href="{%s p.Namespace.Parent.URI() %}">{%cat "../../svgs/back.svg" %}</a>
{% else %}
	<a class="back" href="/namespaces">{% cat "../../svgs/back.svg" %}</a>
{% endif %}
{%= renderFullName(p.Namespace.User.Username, p.Namespace.FullName) %}
<small>{%s p.Namespace.Description %}</small>
{% endfunc %}

{% func (p *ShowPage) Actions() %}
<li><a href="{%s p.Namespace.URI() %}/-/edit" class="btn btn-secondary">Edit</a></li>
<li><a href="/namespaces/create?parent={%s p.Namespace.FullName %}" class="btn btn-primary">Create</a></li>
{% endfunc %}

{% func (p *ShowPage) Navigation() %}
{% stripspace %}
<ul class="nav">
	<li>{%= template.RenderLink(p.Namespace.URI(), p.URI) %}<span class="icon-inline">{% cat "../../svgs/build.svg" %}</span>Builds</a></li>
	<li>{%= template.RenderLink(p.Namespace.URI() + "/-/namespaces", p.URI) %}<span class="icon-inline">{% cat "../../svgs/folder.svg" %}</span>Namespaces</a></li>
</ul>
{% endstripspace %}
{% endfunc %}

{% func (p *ShowNamespacesPage) Body() %}
{%= renderNamespaces(p.Namespaces, p.URI, p.Search) %}
{% endfunc %}
{% endcollapsespace %}
