{%
import (
	"github.com/andrewpillar/thrall/form"
	"github.com/andrewpillar/thrall/model"
	"github.com/andrewpillar/thrall/template"
	"github.com/andrewpillar/thrall/template/build"
	"github.com/andrewpillar/thrall/template/key"
	"github.com/andrewpillar/thrall/template/object"
	"github.com/andrewpillar/thrall/template/variable"
)
%}

{% code
type ShowPage struct {
	template.BasePage

	Namespace *model.Namespace

	Status string
	Search string

	Builds []*model.Build
}

type ShowNamespaces struct {
	ShowPage

	Index IndexPage
}

type ShowObjects struct {
	ShowPage

	Index object.IndexPage
}

type ShowVariables struct {
	ShowPage

	Index variable.IndexPage
}

type ShowKeys struct {
	ShowPage

	Index key.IndexPage
}

type ShowCollaborators struct {
	ShowPage

	CSRF          string
	Fields        map[string]string
	Errors        form.Errors
	Collaborators []*model.Collaborator
}
%}

{% collapsespace %}
{% func (p *ShowPage) Title() %}
	{%s p.Namespace.Path %} - Thrall
{% endfunc %}

{% func (p *ShowNamespaces) Title() %}
	{%s p.Namespace.Path %} - Namespaces
{% endfunc %}

{% func (p *ShowObjects) Title() %}
	{%s p.Namespace.Path %} - Objects
{% endfunc %}

{% func (p *ShowVariables) Title() %}
	{%s p.Namespace.Path %} - Variables
{% endfunc %}

{% func (p *ShowKeys) Title() %}
	{%s p.Namespace.Path %} - Keys
{% endfunc %}

{% func (p *ShowCollaborators) Title() %}
	{%s p.Namespace.Path %} - Collaborators
{% endfunc %}

{% func (p *ShowPage) Body() %}
	<div class="panel">{%= build.RenderIndex(p.Builds, p.URI, p.Status, p.Search) %}</div>
{% endfunc %}

{% func (p *ShowNamespaces) Body() %}
	{%= p.Index.Body() %}
{% endfunc %}

{% func (p *ShowObjects) Body() %}
	{%= p.Index.Body() %}
{% endfunc %}

{% func (p *ShowVariables) Body() %}
	{%= p.Index.Body() %}
{% endfunc %}

{% func (p *ShowKeys) Body() %}
	{%= p.Index.Body() %}
{% endfunc %}

{% func (p *ShowCollaborators) Body() %}
	<div class="panel">
		<div class="panel-header panel-body">
			<form method="POST" action="{%s p.Namespace.UIEndpoint("-", "collaborators") %}">
				{%s= p.CSRF %}
				<div class="form-field form-field-inline">
					<input type="text" class="form-text" name="handle" placeholder="Add a collaborator..." value="{%s p.Fields["handle"] %}" autocomplete="off"/>
					<button type="submit" class="btn btn-primary">Add</button>
					<span class="form-error">{%s p.Errors.First("handle") %}</span>
				</div>
			</form>
		</div>
		{% if len(p.Collaborators) == 0 %}
			<div class="panel-message muted">Share resources with other users by adding them as a collaborator.</div>
		{% else %}
			<table class="table">
				<thead>
					<tr>
						<th>USER</th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					{% for _, c := range p.Collaborators %}
						<tr>
							<td>{%s c.User.Username %} &lt;{%s c.User.Email %}&gt;</td>
							{% if p.User != nil && p.User.ID == p.Namespace.UserID %}
								<td class="align-right">
									<form method="POST" action="{%s c.UIEndpoint() %}">
										{%s= p.CSRF %}
										<input type="hidden" name="_method" value="DELETE"/>
										<button type="submit" class="btn btn-danger">Delete</button>
									</form>
								</td>
							{% endif %}
						</tr>
					{% endfor %}
				</tbody>
			</table>
		{% endif %}
	</div>
{% endfunc %}

{% func (p *ShowPage) Header() %}
	{% if p.Namespace.Parent != nil %}
		<a class="back" href="{%s p.Namespace.Parent.UIEndpoint() %}">{%cat "../../svgs/back.svg" %}</a>
	{% else %}
		<a class="back" href="/namespaces">{% cat "../../svgs/back.svg" %}</a>
	{% endif %}
	{%= renderPath(p.Namespace.User.Username, p.Namespace.Path) %}
	<small>{%s p.Namespace.Description %}</small>
{% endfunc %}

{% func (p *ShowPage) Actions() %}
	{% if p.User != nil && p.User.ID == p.Namespace.UserID %}
		<li><a href="{%s p.Namespace.UIEndpoint() %}/-/edit" class="btn btn-primary">Edit</a></li>
		{% if p.Namespace.Level + 1 < model.NamespaceMaxDepth %}
			<li><a href="/namespaces/create?parent={%s p.Namespace.Path %}" class="btn btn-primary">Create</a></li>
		{% endif %}
	{% endif %}
{% endfunc %}

{% func (p *ShowPage) Navigation() %}
	<li>
		<a href="{%s p.Namespace.UIEndpoint() %}" class="{%s template.Active(p.Namespace.UIEndpoint() == p.URI) %}">
			{% cat "../../svgs/build.svg" %}<span>Builds</span>
		</a>
	</li>
	<li>
		<a href="{%s p.Namespace.UIEndpoint("-", "namespaces") %}" class="{%s template.Active(p.Namespace.UIEndpoint("-", "namespaces") == p.URI) %}">
			{% cat "../../svgs/folder.svg" %}<span>Namespaces</span>
		</a>
	</li>
	<li>
		<a href="{%s p.Namespace.UIEndpoint("-", "objects") %}" class="{%s template.Active(p.Namespace.UIEndpoint("-", "objects") == p.URI) %}">
			{% cat "../../svgs/upload.svg" %}<span>Objects</span>
		</a>
	</li>
	<li>
		<a href="{%s p.Namespace.UIEndpoint("-", "variables") %}" class="{%s template.Active(p.Namespace.UIEndpoint("-", "variables") == p.URI) %}">
			{% cat "../../svgs/code.svg" %}<span>Variables</span>
		</a>
	</li>
	<li>
		<a href="{%s p.Namespace.UIEndpoint("-", "keys") %}" class="{%s template.Active(p.Namespace.UIEndpoint("-", "keys") == p.URI) %}">
			{% cat "../../svgs/key.svg" %}<span>SSH Keys</span>
		</a>
	</li>
	<li>
		<a href="{%s p.Namespace.UIEndpoint("-", "collaborators") %}" class="{%s template.Active(p.Namespace.UIEndpoint("-", "collaborators") == p.URI) %}">
			{% cat "../../svgs/users.svg" %}<span>Collaborators</span>
		</a>
	</li>
{% endfunc %}
{% endcollapsespace %}
