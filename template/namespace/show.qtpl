{%
import (
	"github.com/andrewpillar/thrall/model"
	"github.com/andrewpillar/thrall/template"
	"github.com/andrewpillar/thrall/template/build"
	"github.com/andrewpillar/thrall/template/key"
	"github.com/andrewpillar/thrall/template/object"
	"github.com/andrewpillar/thrall/template/variable"
)
%}

{% code
type ShowPage struct {
	template.BasePage

	Namespace *model.Namespace

	Status string
	Search string

	Builds []*model.Build
}

type ShowNamespaces struct {
	ShowPage

	Namespaces []*model.Namespace
}

type ShowObjects struct {
	ShowPage

	CSRF    string
	Objects []*model.Object
}

type ShowVariables struct {
	ShowPage

	CSRF      string
	Variables []*model.Variable
}

type ShowKeys struct {
	ShowPage

	CSRF string
	Keys []*model.Key
}
%}

{% collapsespace %}
{% func (p *ShowPage) Title() %}
	{%s p.Namespace.Path %} - Thrall
{% endfunc %}

{% func (p *ShowNamespaces) Title() %}
	{%s p.Namespace.Path %} - Namespaces
{% endfunc %}

{% func (p *ShowObjects) Title() %}
	{%s p.Namespace.Path %} - Objects
{% endfunc %}

{% func (p *ShowVariables) Title() %}
	{%s p.Namespace.Path %} - Variables
{% endfunc %}

{% func (p *ShowKeys) Title() %}
	{%s p.Namespace.Path %} - Keys
{% endfunc %}

{% func (p *ShowPage) Body() %}
	<div class="panel">{%= build.RenderIndex(p.Builds, p.URI, p.Status, p.Search) %}</div>
{% endfunc %}

{% func (p *ShowNamespaces) Body() %}
	<div class="panel">{%= RenderIndex(p.Namespaces, p.URI, p.Search) %}</div>
{% endfunc %}

{% func (p *ShowObjects) Body() %}
	<div class="panel">{%= object.RenderIndex(p.Objects, p.URI, p.Search, p.CSRF) %}</div>
{% endfunc %}

{% func (p *ShowVariables) Body() %}
	<div class="panel">{%= variable.RenderIndex(p.Variables, p.URI, p.Search, p.CSRF) %}</div>
{% endfunc %}

{% func (p *ShowKeys) Body() %}
	<div class="panel">{%= key.RenderIndex(p.Keys, p.URI, p.Search, p.CSRF) %}</div>
{% endfunc %}

{% func (p *ShowPage) Header() %}
	{% if p.Namespace.Parent != nil %}
		<a class="back" href="{%s p.Namespace.Parent.UIEndpoint() %}">{%cat "../../svgs/back.svg" %}</a>
	{% else %}
		<a class="back" href="/namespaces">{% cat "../../svgs/back.svg" %}</a>
	{% endif %}
	{%= renderPath(p.Namespace.User.Username, p.Namespace.Path) %}
	<small>{%s p.Namespace.Description %}</small>
{% endfunc %}

{% func (p *ShowPage) Actions() %}
	<li><a href="{%s p.Namespace.UIEndpoint() %}/-/edit" class="btn btn-primary">Edit</a></li>
	{% if p.Namespace.Level + 1 < model.NamespaceMaxDepth %}
	<li><a href="/namespaces/create?parent={%s p.Namespace.Path %}" class="btn btn-primary">Create</a></li>
	{% endif %}
{% endfunc %}

{% func (p *ShowPage) Navigation() %}
	<li>
		<a href="{%s p.Namespace.UIEndpoint() %}" class="{%s template.Active(p.Namespace.UIEndpoint() == p.URI) %}">
			{% cat "../../svgs/build.svg" %}<span>Builds</span>
		</a>
	</li>
	<li>
		<a href="{%s p.Namespace.UIEndpoint("-", "namespaces") %}" class="{%s template.Active(p.Namespace.UIEndpoint("-", "namespaces") == p.URI) %}">
			{% cat "../../svgs/folder.svg" %}<span>Namespaces</span>
		</a>
	</li>
	<li>
		<a href="{%s p.Namespace.UIEndpoint("-", "objects") %}" class="{%s template.Active(p.Namespace.UIEndpoint("-", "objects") == p.URI) %}">
			{% cat "../../svgs/upload.svg" %}<span>Objects</span>
		</a>
	</li>
	<li>
		<a href="{%s p.Namespace.UIEndpoint("-", "variables") %}" class="{%s template.Active(p.Namespace.UIEndpoint("-", "variables") == p.URI) %}">
			{% cat "../../svgs/code.svg" %}<span>Variables</span>
		</a>
	</li>
	<li>
		<a href="{%s p.Namespace.UIEndpoint("-", "keys") %}" class="{%s template.Active(p.Namespace.UIEndpoint("-", "keys") == p.URI) %}">
			{% cat "../../svgs/key.svg" %}<span>SSH Keys</span>
		</a>
	</li>
{% endfunc %}
{% endcollapsespace %}
