// Code generated by qtc from "index.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line cron/template/index.qtpl:2
package template

//line cron/template/index.qtpl:2
import (
	htmltemplate "html/template"
	"strings"

	"djinn-ci.com/cron"
	"djinn-ci.com/database"
	"djinn-ci.com/template"
)

//line cron/template/index.qtpl:12
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line cron/template/index.qtpl:12
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line cron/template/index.qtpl:13
type Index struct {
	template.BasePage

	CSRF      htmltemplate.HTML
	Paginator database.Paginator
	Crons     []*cron.Cron
	Search    string
}

//line cron/template/index.qtpl:24
func (p *Index) StreamTitle(qw422016 *qt422016.Writer) {
//line cron/template/index.qtpl:24
	qw422016.N().S(` Cron Jobs - Djinn CI `)
//line cron/template/index.qtpl:26
}

//line cron/template/index.qtpl:26
func (p *Index) WriteTitle(qq422016 qtio422016.Writer) {
//line cron/template/index.qtpl:26
	qw422016 := qt422016.AcquireWriter(qq422016)
//line cron/template/index.qtpl:26
	p.StreamTitle(qw422016)
//line cron/template/index.qtpl:26
	qt422016.ReleaseWriter(qw422016)
//line cron/template/index.qtpl:26
}

//line cron/template/index.qtpl:26
func (p *Index) Title() string {
//line cron/template/index.qtpl:26
	qb422016 := qt422016.AcquireByteBuffer()
//line cron/template/index.qtpl:26
	p.WriteTitle(qb422016)
//line cron/template/index.qtpl:26
	qs422016 := string(qb422016.B)
//line cron/template/index.qtpl:26
	qt422016.ReleaseByteBuffer(qb422016)
//line cron/template/index.qtpl:26
	return qs422016
//line cron/template/index.qtpl:26
}

//line cron/template/index.qtpl:28
func (p *Index) StreamHeader(qw422016 *qt422016.Writer) {
//line cron/template/index.qtpl:28
	qw422016.N().S(` Cron Jobs `)
//line cron/template/index.qtpl:30
}

//line cron/template/index.qtpl:30
func (p *Index) WriteHeader(qq422016 qtio422016.Writer) {
//line cron/template/index.qtpl:30
	qw422016 := qt422016.AcquireWriter(qq422016)
//line cron/template/index.qtpl:30
	p.StreamHeader(qw422016)
//line cron/template/index.qtpl:30
	qt422016.ReleaseWriter(qw422016)
//line cron/template/index.qtpl:30
}

//line cron/template/index.qtpl:30
func (p *Index) Header() string {
//line cron/template/index.qtpl:30
	qb422016 := qt422016.AcquireByteBuffer()
//line cron/template/index.qtpl:30
	p.WriteHeader(qb422016)
//line cron/template/index.qtpl:30
	qs422016 := string(qb422016.B)
//line cron/template/index.qtpl:30
	qt422016.ReleaseByteBuffer(qb422016)
//line cron/template/index.qtpl:30
	return qs422016
//line cron/template/index.qtpl:30
}

//line cron/template/index.qtpl:32
func (p *Index) StreamBody(qw422016 *qt422016.Writer) {
//line cron/template/index.qtpl:32
	qw422016.N().S(` <div class="panel"> `)
//line cron/template/index.qtpl:34
	if len(p.Crons) == 0 && p.Search == "" {
//line cron/template/index.qtpl:34
		qw422016.N().S(` <div class="panel-message muted">Create a cron job to have builds repeat at a set schedule.</div> `)
//line cron/template/index.qtpl:36
	} else {
//line cron/template/index.qtpl:36
		qw422016.N().S(` <div class="panel-header">`)
//line cron/template/index.qtpl:37
		template.StreamRenderSearch(qw422016, p.URL.Path, p.Search, "Find a cron job...")
//line cron/template/index.qtpl:37
		qw422016.N().S(`</div> `)
//line cron/template/index.qtpl:38
		if len(p.Crons) == 0 && p.Search != "" {
//line cron/template/index.qtpl:38
			qw422016.N().S(` <div class="panel-message muted">No results found.</div> `)
//line cron/template/index.qtpl:40
		} else {
//line cron/template/index.qtpl:40
			qw422016.N().S(` <table class="table"> <thead> <tr> <th>NAME</th> <th>SCHEDULE</th> <th>NEXT RUN</th> <th></th> </tr> </thead> <tbody> `)
//line cron/template/index.qtpl:51
			for _, c := range p.Crons {
//line cron/template/index.qtpl:51
				qw422016.N().S(` <tr> <td><a href="`)
//line cron/template/index.qtpl:53
				qw422016.E().S(c.Endpoint())
//line cron/template/index.qtpl:53
				qw422016.N().S(`">`)
//line cron/template/index.qtpl:53
				qw422016.E().S(c.Name)
//line cron/template/index.qtpl:53
				qw422016.N().S(`</a></td> <td>`)
//line cron/template/index.qtpl:54
				qw422016.E().S(strings.ToUpper(c.Schedule.String()))
//line cron/template/index.qtpl:54
				qw422016.N().S(`</td> <td>`)
//line cron/template/index.qtpl:55
				qw422016.E().S(c.NextRun.Format("Mon, Jan 2 15:04 2006"))
//line cron/template/index.qtpl:55
				qw422016.N().S(`</td> <td class="align-right"> `)
//line cron/template/index.qtpl:57
				if p.User.ID == c.UserID || c.Namespace != nil && c.Namespace.UserID == p.User.ID {
//line cron/template/index.qtpl:57
					qw422016.N().S(` <form method="POST" action="`)
//line cron/template/index.qtpl:58
					qw422016.E().S(c.Endpoint())
//line cron/template/index.qtpl:58
					qw422016.N().S(`"> `)
//line cron/template/index.qtpl:59
					qw422016.N().V(p.CSRF)
//line cron/template/index.qtpl:59
					qw422016.N().S(` <input type="hidden" name="_method" value="DELETE"/> <button type="submti" class="btn btn-danger">Delete</button> </form> `)
//line cron/template/index.qtpl:63
				}
//line cron/template/index.qtpl:63
				qw422016.N().S(` </td> </tr> `)
//line cron/template/index.qtpl:66
			}
//line cron/template/index.qtpl:66
			qw422016.N().S(` </tbody> </table> `)
//line cron/template/index.qtpl:69
		}
//line cron/template/index.qtpl:69
		qw422016.N().S(` `)
//line cron/template/index.qtpl:70
	}
//line cron/template/index.qtpl:70
	qw422016.N().S(` </div> `)
//line cron/template/index.qtpl:72
}

//line cron/template/index.qtpl:72
func (p *Index) WriteBody(qq422016 qtio422016.Writer) {
//line cron/template/index.qtpl:72
	qw422016 := qt422016.AcquireWriter(qq422016)
//line cron/template/index.qtpl:72
	p.StreamBody(qw422016)
//line cron/template/index.qtpl:72
	qt422016.ReleaseWriter(qw422016)
//line cron/template/index.qtpl:72
}

//line cron/template/index.qtpl:72
func (p *Index) Body() string {
//line cron/template/index.qtpl:72
	qb422016 := qt422016.AcquireByteBuffer()
//line cron/template/index.qtpl:72
	p.WriteBody(qb422016)
//line cron/template/index.qtpl:72
	qs422016 := string(qb422016.B)
//line cron/template/index.qtpl:72
	qt422016.ReleaseByteBuffer(qb422016)
//line cron/template/index.qtpl:72
	return qs422016
//line cron/template/index.qtpl:72
}

//line cron/template/index.qtpl:74
func (p *Index) StreamActions(qw422016 *qt422016.Writer) {
//line cron/template/index.qtpl:74
	qw422016.N().S(` `)
//line cron/template/index.qtpl:75
	if _, ok := p.User.Permissions["cron:write"]; ok {
//line cron/template/index.qtpl:75
		qw422016.N().S(` <li><a href="/cron/create" class="btn btn-primary">Create</a></li> `)
//line cron/template/index.qtpl:77
	}
//line cron/template/index.qtpl:77
	qw422016.N().S(` `)
//line cron/template/index.qtpl:78
}

//line cron/template/index.qtpl:78
func (p *Index) WriteActions(qq422016 qtio422016.Writer) {
//line cron/template/index.qtpl:78
	qw422016 := qt422016.AcquireWriter(qq422016)
//line cron/template/index.qtpl:78
	p.StreamActions(qw422016)
//line cron/template/index.qtpl:78
	qt422016.ReleaseWriter(qw422016)
//line cron/template/index.qtpl:78
}

//line cron/template/index.qtpl:78
func (p *Index) Actions() string {
//line cron/template/index.qtpl:78
	qb422016 := qt422016.AcquireByteBuffer()
//line cron/template/index.qtpl:78
	p.WriteActions(qb422016)
//line cron/template/index.qtpl:78
	qs422016 := string(qb422016.B)
//line cron/template/index.qtpl:78
	qt422016.ReleaseByteBuffer(qb422016)
//line cron/template/index.qtpl:78
	return qs422016
//line cron/template/index.qtpl:78
}

//line cron/template/index.qtpl:80
func (p *Index) StreamNavigation(qw422016 *qt422016.Writer) {
//line cron/template/index.qtpl:80
}

//line cron/template/index.qtpl:80
func (p *Index) WriteNavigation(qq422016 qtio422016.Writer) {
//line cron/template/index.qtpl:80
	qw422016 := qt422016.AcquireWriter(qq422016)
//line cron/template/index.qtpl:80
	p.StreamNavigation(qw422016)
//line cron/template/index.qtpl:80
	qt422016.ReleaseWriter(qw422016)
//line cron/template/index.qtpl:80
}

//line cron/template/index.qtpl:80
func (p *Index) Navigation() string {
//line cron/template/index.qtpl:80
	qb422016 := qt422016.AcquireByteBuffer()
//line cron/template/index.qtpl:80
	p.WriteNavigation(qb422016)
//line cron/template/index.qtpl:80
	qs422016 := string(qb422016.B)
//line cron/template/index.qtpl:80
	qt422016.ReleaseByteBuffer(qb422016)
//line cron/template/index.qtpl:80
	return qs422016
//line cron/template/index.qtpl:80
}
