{%
import (
	"strings"

	"github.com/andrewpillar/thrall/model"
	"github.com/andrewpillar/thrall/template"
	"github.com/andrewpillar/thrall/template/build"
)
%}

{% code
type ShowPage struct {
	template.Page

	Namespace *model.Namespace

	ShowNamespaces bool

	Status string
	Search string
}
%}

{% collapsespace %}
{% func renderPath(username, fullName string) %}
	{% code
		parts := strings.Split(fullName, "/")
	%}
	{% for i, p := range parts %}
		<a href="/u/{%s username %}/{%s strings.Join(parts[:i + 1], "/") %}">{%s p %}</a>
		{% if i != len(parts) - 1 %}<span> / </span>{% endif %}
	{% endfor %}
{% endfunc %}

{% func (p *ShowPage) Title() %}
	{%s p.Namespace.Path %} - Thrall
{% endfunc %}

{% func (p *ShowPage) Body() %}
	<div class="panel">
		{% if p.ShowNamespaces %}
			{% if len(p.Namespace.Children) == 0 %}
				{% if p.Search == "" %}
					<div class="panel-message muted">Namespaces allow you to group related builds together.</div>
				{% else %}
					<div class="panel-header">
						{%= template.RenderSearch(p.URI, p.Search, "Find a namespace...") %}
					</div>
					<div class="panel-message muted">No results found.</div>
				{% endif %}
			{% else %}
				<div class="panel-header">
					{%= template.RenderSearch(p.URI, p.Search, "Find a namespace...") %}
				</div>
				{%= RenderTable(p.Namespace.Children) %}
			{% endif %}
		{% else %}
			<div class="panel-header">
				{%= build.RenderStatusNav(p.URI, p.Status) %}
				{%= template.RenderSearch(p.URI, "", "Find a build...") %}
			</div>
			{% if len(p.Namespace.Builds) == 0 %}
				<div class="panel-message muted">
					{% if p.Status == "" %}No builds have been submitted yet.{% else %}No {%s p.Status %} builds.{% endif %}
				</div>
			{% else %}
				{%= build.RenderTable(p.Namespace.Builds) %}
			{% endif %}
		{% endif %}
	</div>
{% endfunc %}

{% func (p *ShowPage) Header() %}
	{% if p.Namespace.Parent != nil %}
		<a class="back" href="{%s p.Namespace.Parent.UIEndpoint() %}">{%cat "../../svgs/back.svg" %}</a>
	{% else %}
		<a class="back" href="/namespaces">{% cat "../../svgs/back.svg" %}</a>
	{% endif %}
	{%= renderPath(p.Namespace.User.Username, p.Namespace.Path) %}
	<small>{%s p.Namespace.Description %}</small>
{% endfunc %}

{% func (p *ShowPage) Actions() %}
	<li><a href="{%s p.Namespace.UIEndpoint() %}/-/edit" class="btn btn-primary">Edit</a></li>
	{% if p.Namespace.Level + 1 < model.NamespaceMaxDepth %}
	<li><a href="/namespaces/create?parent={%s p.Namespace.Path %}" class="btn btn-primary">Create</a></li>
	{% endif %}
{% endfunc %}

{% func (p *ShowPage) Navigation() %}
	<li>{%= template.RenderLink(p.Namespace.UIEndpoint(), p.URI) %}{% cat "../../svgs/build.svg" %}<span>Builds</span></a></li>
	<li>{%= template.RenderLink(p.Namespace.UIEndpoint("-", "namespaces"), p.URI) %}{% cat "../../svgs/folder.svg" %}<span>Namespaces</span></a></li>
{% endfunc %}
{% endcollapsespace %}
