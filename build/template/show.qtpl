{%
import (
	htmltemplate "html/template"
	"time"

	"djinn-ci.com/build"
	"djinn-ci.com/runner"
	"djinn-ci.com/template"

	"github.com/hako/durafmt"
)
%}

{% code
type Show struct {
	template.BasePage
	template.Section

	Build *build.Build
	CSRF  htmltemplate.HTML
}


type Job struct {
	template.BasePage

	Build *build.Build
	Job   *build.Job
}

var timeFormat = "Jan 02, 2006, at 15:04:05"
%}

{% collapsespace %}
{% func renderTimestamp(t time.Time) %}
{% code
	duration := time.Now().Sub(t)
	formatted := t.Format(timeFormat)
%}
	{% if duration < (24 * time.Hour) %}
		<span title="{%s formatted %}">{%v durafmt.Parse(duration).LimitFirstN(2) %}</span> ago
	{% else %}
		{%s formatted %}
	{% endif %}
{% endfunc %}

{% func RenderTrigger(b *build.Build) %}
	{% code
		title := b.Trigger.CommentTitle()
		comment := b.Trigger.CommentBody()
	%}
	<div class="panel">
		<div class="panel-body">
			<div class="comment-header">
				{%= template.RenderShortStatus(b.Status) %}
				{% if b.Trigger.Comment != "" %}
					<strong class="inline-block mt-5 middle">{%s title %}</strong>
				{% else %}
					<em class="inline-block mt-5 middle muted">No build comment.</em>
				{% endif %}
			</div>
			{% if comment != "" %}<br/><pre>{%s comment %}</pre>{% endif %}
		</div>
		<div class="panel-footer">
			<strong>{%s b.Trigger.Data["username"] %}</strong>
			{% switch b.Trigger.Type %}
			{% case build.Manual %}
				submitted
			{% case build.Push %}
				committed <a target="_blank" href="{%s b.Trigger.Data["url"] %}">{%s b.Trigger.Data["sha"][:7] %}</a> to <span class="code">{%s b.Trigger.Data["ref"] %}</span>
			{% case build.Pull %}
				{%s b.Trigger.Data["action"] %} pull request <a target="_blank" href="{%s b.Trigger.Data["url"] %}">#{%s b.Trigger.Data["id"] %}</a> to <span class="code">{%s b.Trigger.Data["ref"] %}</span> with commit <span class="code">{%s b.Trigger.Data["sha"][:7] %}</span>
			{% endswitch %}
			{%= renderTimestamp(b.CreatedAt) %}
		</div>
		{% if len(b.Tags) > 0 %}
			<div class="panel-footer">
				{% for _, t := range b.Tags %}
					<a href="/builds?tag={%s t.Name %}" class="pill pill-light">{%s t.Name %}</a>
				{% endfor %}
			</div>
		{% endif %}
	</div>
{% endfunc %}

{% func (p *Show) Title() %}
	{% if p.Section != nil %}
		{%= p.Section.Title() %} - Djinn CI
	{% else %}
		Build #{%v p.Build.Number %} {%s p.Build.Trigger.CommentTitle() %} - Djinn CI
	{% endif %}
{% endfunc %}

{% func (p *Show) Body() %}
	<div class="overflow">
		<div class="col-25 col-left">
			<div class="panel">
				<table class="table">
					<tr>
						<td>Started at:</td>
						<td class="align-right">
							{% if p.Build.StartedAt.Valid %}
								{%s p.Build.StartedAt.Time.Format(timeFormat) %}
							{% else %}
								<span class="muted">--</span>
							{% endif %}
						</td>
					</tr>
					<tr>
						<td>Finished at:</td>
						<td class="align-right">
							{% if p.Build.FinishedAt.Valid %}
								{%s p.Build.FinishedAt.Time.Format(timeFormat) %}
							{% else %}
								<span class="muted">--</span>
							{% endif %}
						</td>
					</tr>
					<tr>
						<td>Duration:</td>
						<td class="align-right">
							{% if !p.Build.FinishedAt.Valid || !p.Build.StartedAt.Valid %}
								<span class="muted">--</span>
							{% else %}
								{%v durafmt.Parse(p.Build.FinishedAt.Time.Sub(p.Build.StartedAt.Time)).LimitFirstN(1) %}
							{% endif %}
						</td>
					</tr>
				</table>
			</div>
			{% for _, s := range p.Build.Stages %}
				<div class="panel">
					<div class="panel-header"><h3>{%s s.Name %}</h3></div>
					<table class="table">
						{% for _, j := range s.Jobs %}
							<tr>
								<td>{%= template.RenderShortStatus(j.Status) %} <a href="{%s j.Endpoint() %}">{%s j.Name %}</a></td>
								<td class="align-right">
									{% if !j.StartedAt.Valid || !j.FinishedAt.Valid %}
										<span class="muted">--</span>
									{% else %}
										{%v j.FinishedAt.Time.Sub(j.StartedAt.Time) %}
									{% endif %}
								</td>
							</tr>
						{% endfor %}
					</table>
				</div>
			{% endfor %}
		</div>
		<div class="col-75 col-right">
			{%= RenderTrigger(p.Build) %}
			{% if p.Section != nil %}
				{%= p.Section.Body() %}
			{% else %}
				<div class="panel">
					{% if p.Build.Output.Valid %}
						<div class="panel-header">
							<ul class="panel-actions">
								<li>
									<a class="btn btn-primary" href="{%s p.Build.Endpoint("output", "raw") %}">
										{% cat "../../static/svg/document.svg" %}<span>Raw</span>
									</a>
								</li>
							</ul>
						</div>
						{%= template.RenderCode(p.Build.Output.String) %}
					{% else %}
						<div class="panel-message muted">No build output has been produced.</div>
					{% endif %}
				</div>
			{% endif %}
		</div>
	</div>
{% endfunc %}

{% func (p *Show) Header() %}
	<a href="/" class="back">{% cat "../../static/svg/back.svg" %}</a>
	{% if p.Build.Namespace != nil %}
		<a href="{%s p.Build.Namespace.Endpoint() %}">{%s p.Build.Namespace.Name %}</a> /
	{% endif %}
	Build #{%v p.Build.Number %}
	{% if p.Build.Pinned %}
		<span class="muted" title="Pinned">{% cat "../../static/svg/pushpin.svg" %}
	{% endif %}
{% endfunc %}

{% func (p *Show) Actions() %}
	{% if p.User.ID == p.Build.UserID %}
		<li>
			{% if p.Build.Pinned %}
				<form method="POST" action="{%s p.Build.Endpoint("unpin") %}">
			{% else %}
				<form method="POST" action="{%s p.Build.Endpoint("pin") %}">
			{% endif %}
				{%v= p.CSRF %}
				<input type="hidden" name="_method" value="PATCH">
				{% if p.Build.Pinned %}
					<button type="submit" class="btn btn-primary">Unpin</button>
				{% else %}
					<button type="submit" class="btn btn-primary">Pin</button>
				{% endif %}
			</form>
		</li>
		{% if p.Build.Status == runner.Running %}
			<li>
				<form method="POST" action="{%s p.Build.Endpoint() %}">
					{%v= p.CSRF %}
					<input type="hidden" name="_method" value="DELETE">
					<button type="submit" class="btn btn-danger">Kill</button>
				</form>
			</li>
		{% endif %}
	{% endif %}
{% endfunc %}

{% stripspace %}
{% func (p *Show) Navigation() %}
	<li>
		<a href="{%s p.Build.Endpoint() %}" class="{%s template.Active(p.Build.Endpoint() == p.URL.Path) %}">
			{% cat "../../static/svg/eye.svg" %}<span>Overview</span>
		</a>
	</li>
	<li>
		<a href="{%s p.Build.Endpoint("manifest") %}" class="{%s template.Active(p.Build.Endpoint("manifest") == p.URL.Path) %}">
			{% cat "../../static/svg/list.svg" %}<span>Manifest</span>
		</a>
	</li>
	<li>
		<a href="{%s p.Build.Endpoint("objects") %}" class="{%s template.Active(p.Build.Endpoint("objects") == p.URL.Path) %}">
			{% cat "../../static/svg/upload.svg" %}<span>Objects</span>
		</a>
	</li>
	<li>
		<a href="{%s p.Build.Endpoint("artifacts") %}" class="{%s template.Active(p.Build.Endpoint("artifacts") == p.URL.Path) %}">
			{% cat "../../static/svg/download.svg" %}<span>Artifacts</span>
		</a>
	</li>
	<li>
		<a href="{%s p.Build.Endpoint("variables") %}" class="{%s template.Active(p.Build.Endpoint("variables") == p.URL.Path) %}">
			{% cat "../../static/svg/code.svg" %}<span>Variables</span>
		</a>
	</li>
	<li>
		<a href="{%s p.Build.Endpoint("keys") %}" class="{%s template.Active(p.Build.Endpoint("keys") == p.URL.Path) %}">
			{% cat "../../static/svg/key.svg" %}<span>SSH Keys</span>
		</a>
	</li>
	<li>
		<a href="{%s p.Build.Endpoint("tags") %}" class="{%s template.Active(p.Build.Endpoint("tags") == p.URL.Path) %}">
			{% cat "../../static/svg/tag.svg" %}<span>Tags</span>
		</a>
	</li>
{% endfunc %}
{% endstripspace %}

{% func (p *Job) Title() %}
	{%s p.Job.Name %} - Djinn
{% endfunc %}

{% func (p *Job) Body() %}
	<div class="overflow">
		<div class="col-25 col-left">
			<div class="panel">
				<table class="table">
					<tr>
						<td>Status:</td>
						<td class="align-right">{%= template.RenderStatus(p.Job.Status) %}</td>
					</tr>
					<tr>
						<td>Started at:</td>
						<td class="align-right">
							{% if p.Job.StartedAt.Valid %}
								{%s p.Job.StartedAt.Time.Format("2006-01-02T15:04:05") %}
							{% else %}
								<span class="muted">--</span>
							{% endif %}
						</td>
					</tr>
					<tr>
						<td>Finished at:</td>
						<td class="align-right">
							{% if p.Job.FinishedAt.Valid %}
								{%s p.Job.FinishedAt.Time.Format("2006-01-02T15:04:05") %}
							{% else %}
								<span class="muted">--</span>
							{% endif %}
						</td>
					</tr>
					<tr>
						<td>Duration:</td>
						<td class="align-right">
							{% if !p.Job.FinishedAt.Valid || !p.Job.StartedAt.Valid %}
								<span class="muted">--</span>
							{% else %}
								{%v p.Job.FinishedAt.Time.Sub(p.Job.StartedAt.Time) %}
							{% endif %}
						</td>
					</tr>
				</table>
			</div>
		</div>
		<div class="col-75 col-right">
			{%= RenderTrigger(p.Build) %}
			<div class="panel">
				{% if p.Job.Output.Valid %}
					<div class="panel-header">
						<h3>Output</h3>
						<ul class="panel-actions">
							<li><a class="btn btn-primary" href="{%s p.Job.Endpoint("output", "raw") %}">{% cat "../../static/svg/document.svg" %}<span>Raw</span></a></li>
						</ul>
					</div>
					{%= template.RenderCode(p.Job.Output.String) %}
				{% else %}
					<div class="panel-message muted">No job output has been produced.</div>
				{% endif %}
			</div>
			<div class="panel">
				<div class="panel-header"><h3>Artifacts</h3></div>
				{% if len(p.Job.Artifacts) > 0 %}
					{%= RenderArtifactTable(p.Job.Artifacts, p.URL.Path, "", false) %}
				{% else %}
					<div class="panel-message muted">No artifacts have been collected from this job.</div>
				{% endif %}
			</div>
		</div>
	</div>
{% endfunc %}

{% func (p *Job) Header() %}
	<a href="{%s p.Build.Endpoint() %}" class="back">{% cat "../../static/svg/back.svg" %}</a>
	{% if p.Build.Namespace != nil %}
		<a href="{%s p.Build.Namespace.Endpoint() %}">{%v p.Build.Namespace.Name %}</a> /
	{% endif %}
 	Build #{%v p.Build.Number %} / {%s p.Job.Stage.Name %} - {%s p.Job.Name %}
	{% if p.Build.Pinned %}
		<span class="muted" title="Pinned">{% cat "../../static/svg/pushpin.svg" %}
	{% endif %}
{% endfunc %}

{% func (p *Job) Actions() %}{% endfunc %}
{% func (p *Job) Navigation() %}{% endfunc %}
{% endcollapsespace %}
